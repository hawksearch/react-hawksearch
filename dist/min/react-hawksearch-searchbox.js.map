{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///./src/models/Search/Pagination.ts","webpack:///./src/models/Search/Result.ts","webpack:///./src/models/Search/Sorting.ts","webpack:///./src/models/Search/Selections.ts","webpack:///./src/models/Facets/Value.ts","webpack:///./src/models/Facets/Swatch.ts","webpack:///./src/models/Facets/Range.ts","webpack:///./src/models/Facets/Facet.ts","webpack:///./src/models/Search/Rule.ts","webpack:///./src/models/Search/Trigger.ts","webpack:///./src/models/Search/Merchandising.ts","webpack:///./src/models/Search/PageContent.ts","webpack:///./src/models/Search/Response.ts","webpack:///./src/models/Search/ClientData.ts","webpack:///./src/models/Search/ContentType.ts","webpack:///./src/helpers/utils.ts","webpack:///./src/store/HawkState.ts","webpack:///./src/util/MergableState.ts","webpack:///./src/components/StoreProvider.tsx","webpack:///./src/models/Autocomplete/Request.ts","webpack:///./src/models/Autocomplete/Category.ts","webpack:///./src/models/Autocomplete/Product.ts","webpack:///./src/models/Autocomplete/Content.ts","webpack:///./src/models/Autocomplete/Popular.ts","webpack:///./src/models/Autocomplete/Response.ts","webpack:///./src/models/Autocomplete/index.ts","webpack:///./src/components/TrackingEvent.tsx","webpack:///./src/store/Store.ts","webpack:///./src/components/AuthToken.tsx","webpack:///./src/net/HawkClient.ts","webpack:///./src/components/ui/SearchBox/GlobalSearchBox.tsx","webpack:///./src/app/SearchBox.tsx","webpack:///./src/components/svg/PlusSVG.tsx","webpack:///./src/components/svg/MinusSVG.tsx","webpack:///./src/components/svg/QuestionmarkSVG.tsx","webpack:///./src/components/ui/Facets/Facet.tsx","webpack:///./src/models/Autocomplete/Suggestion.ts","webpack:///./src/components/svg/DashCircleSVG.tsx","webpack:///./src/components/svg/CheckmarkSVG.tsx","webpack:///./src/components/svg/PlusCircleSVG.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Checkbox.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Search.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Link.tsx","webpack:///./src/components/ui/Facets/SliderCalendarInputs.tsx","webpack:///./src/components/ui/Facets/FacetTypes/SliderDate.tsx","webpack:///./src/components/ui/Facets/SliderNumericInputs.tsx","webpack:///./src/components/ui/Facets/FacetTypes/SliderNumeric.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Slider.tsx","webpack:///./src/components/ui/Facets/FacetTypes/SwatchItem.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Swatch.tsx","webpack:///./src/components/ui/Facets/FacetTypes/NestedItem.tsx","webpack:///./src/components/ui/Facets/FacetTypes/Nested.tsx","webpack:///./src/components/ui/Facets/FacetTypes/OpenRange.tsx","webpack:///./src/models/Facets/FacetType.ts","webpack:///./src/components/ui/Facets/Overrides.ts","webpack:///./src/components/ui/SearchBox/SearchSuggestionsList.tsx","webpack:///./src/components/ui/SearchBox/SearchSuggestions.tsx","webpack:///./src/components/ui/SearchBox/SearchBoxBase.tsx","webpack:///./src/components/ConfigProvider.tsx"],"names":["webpackJsonpCallback","data","moduleId","chunkId","chunkIds","moreModules","executeModules","i","resolves","length","Object","prototype","hasOwnProperty","call","installedChunks","push","modules","parentJsonpFunction","shift","deferredModules","apply","checkDeferredModules","result","deferredModule","fulfilled","j","depId","splice","__webpack_require__","s","installedModules","2","exports","module","l","e","promises","installedChunkData","promise","Promise","resolve","reject","onScriptComplete","script","document","createElement","charset","timeout","nc","setAttribute","src","p","jsonpScriptSrc","error","Error","event","onerror","onload","clearTimeout","chunk","errorType","type","realSrc","target","message","name","request","undefined","setTimeout","head","appendChild","all","m","c","d","getter","o","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","oe","err","console","jsonpArray","window","oldJsonpFunction","slice","Pagination","init","assign","this","Items","map","PaginationItem","Result","field","Document","values","Sorting","SortingItem","Selections","keys","forEach","selFacet","SelectionFacet","SelectionFacetValue","Value","Swatch","Range","Facet","SwatchData","Ranges","Values","v","DisplayType","TruncateThreshold","IsSearch","SearchThreshold","ParamName","Field","RuleType","RuleOperatorType","Rule","Parent","Rules","BannerTrigger","FeaturedItems","FeaturedItem","Merchandising","MerchandisingItem","PageContentItem","Trigger","PageContent","Response","Results","Facets","f","ContentType","getVisitorExpiry","Date","setTime","getTime","toUTCString","getVisitExpiry","createGuid","substr","Math","floor","random","join","getCookie","nameEQ","ca","cookie","split","charAt","substring","indexOf","setCookie","expiry","expires","useHawkState","initialSearch","initialValue","typeConstructor","state","setState","config","useHawkConfig","client","HawkClient","SearchStore","pendingSearch","FacetSelections","isLoading","useState","prevState","newState","store","setStore","search","cancellationToken","async","searchResults","searchParams","IsInPreview","isInPreview","ClientGuid","clientGuid","Keyword","decodeURIComponent","indexName","IndexName","indexNameRequired","visitId","visitorId","updatedRequest","ClientData","VisitorId","VisitId","UserAgent","navigator","userAgent","PreviewBuckets","VisitorTargets","Id","axios","isCancel","requestError","Success","setSearch","doHistory","TrackingId","TrackingEvent","track","trackingId","typeId","SearchType","Initial","Refinement","setSearchSelections","selections","searchWithin","SearchWithin","PageNo","useEffect","cts","CancelToken","source","token","cancel","actor","toggleFacetValue","facet","facetValue","negate","facetName","Name","facetField","selectionField","valueValue","valueLabel","Label","facetSelections","isFacetSelected","selState","selectionIndex","FacetSelectionState","Selected","Negated","setFacetValues","facetValues","clearFacet","clearFacetValue","NotSelected","clearAllFacets","pinItem","updatePinOrder","HawkContext","React","createContext","useHawkSearch","useContext","StoreProvider","children","Provider","Category","SuggestionType","Suggestion","CategoryStrategy","item","downshift","location","Url","Product","ProductStrategy","ProductName","Content","ContentStrategy","Popular","PopularStrategy","Categories","Products","E_T","P_T","SuggestType","url","instance","trackingURL","guid","clientGUID","getClientGUID","pageType","documentElement","pl","EventType","pageLoad","EventData","btoa","JSON","stringify","PageTypeId","RequestPath","pathname","Qs","ViewportHeight","clientHeight","ViewportWidth","clientWidth","mr","queryId","QueryId","TypeId","uniqueId","click","UniqueId","bannerId","campaignId","bannerClick","CampaignId","BannerId","bannerImpression","orderNo","itemList","total","subTotal","tax","currency","sale","OrderNo","ItemList","Total","Tax","SubTotal","Currency","price","quantity","addToCart","Quantity","Price","args","add2CartMultiple","ItemsList","rate","widgetGuid","itemIndex","requestId","recommendationClick","ItemIndex","RequestId","WidgetGuid","keyword","suggestType","autoCompleteClick","fetch","method","headers","body","then","resp","log","status","catch","eventName","toLowerCase","writePageLoad","writeSearchTracking","writeClick","writeBannerClick","writeBannerImpression","writeSale","writeAdd2Cart","writeAdd2CartMultiple","writeRate","writeRecommendationClick","writeAutoCompleteClick","getInstance","initial","selectionIdx","negationIdx","selectedValue","selectionValue","matchingValue","findMatchingValue","Children","clientSelections","facets","find","label","items","fieldName","selectionValues","FieldType","matchingVal","AuthToken","accessToken","refreshToken","baseUrl","apiUrl","dashboardUrl","searchUrl","autocompleteUrl","refreshTokenURL","pinItemURL","updatePinOrderURL","axiosInstance","interceptors","use","conf","getTokens","Authorization","common","response","originalRequest","_retry","post","URL","href","Token","RefreshToken","res","setTokens","defaults","cancelToken","GlobalSearchBox","searchPageUrl","className","SearchBoxBase","onSubmit","inputValue","redirect","onViewMatches","closeMenu","PageId","CustomUrl","initializeSearchBox","searchBoxElement","renderElem","getElementById","ReactDOM","render","ConfigProvider","HawkSearch","PlusSVG","props","viewBox","class","focusable","aria-hidden","MinusSVG","QuestionmarkSVG","FacetContext","useFacet","searchActor","wrapperRef","useRef","filter","setFilter","shouldTruncate","isTruncated","setTruncated","IsCollapsible","IsCollapsedDefault","isCollapsed","setCollapsed","useTranslation","i18n","shouldSearch","val","remainingFacets","valuesBeforeTrunc","selectFacet","negateFacet","setFacets","decimalPrecision","renderer","renderTruncation","onClick","current","contains","toggleCollapsible","Tooltip","ref","dangerouslySetInnerHTML","__html","onChange","currentTarget","placeholder","suggestionType","DashCircleSVG","fill","CheckmarkSVG","PlusCircleSVG","Checkbox","renderCheckMark","isSelected","renderFacetActions","isNegated","correspondingRange","rangeValueAssetUrl","AssetFullUrl","selectionState","aria-pressed","title","alt","style","textDecoration","Count","Search","hawkActor","input","setInput","onKeyDown","Link","formatDate","unixFormat","date","getFullYear","toString","getMonth","getDate","SliderCalendarInputs","sliderProps","minValue","setMinValue","maxValue","setMaxValue","Number","min","max","newMinValue","isNaN","onValueChange","newMaxValue","Rheostat","lazy","replaceHyphen","replace","SliderDate","range","RangeMin","rangeMin","setMinRange","RangeMax","rangeMax","setMaxRange","RangeStart","rangeStart","setStartRange","RangeEnd","rangeEnd","setEndRange","paramName","newRange","minVal","maxVal","formattedMinVal","formattedMaxVal","selection","Suspense","fallback","currentMinValue","currentMaxValue","ceil","onValuesUpdated","newMin","newMax","SliderNumericInputs","reloadFacets","thousandSeparator","isCurrency","prefix","currencySymbol","formattedValue","onBlur","decimalScale","SliderNumeric","parseFloat","toFixed","IsCurrency","isCurency","setIsCurrency","CurrencySymbol","setCurrencySymbol","selectedValues","Slider","DataType","SwatchItem","swatchValue","swatchUrl","facetSwatch","AssetUrl","AssetName","colorSwatchStyle","backgroundColor","Color","listItemClassNames","onSwatchSelected","isColor","NestedItem","isExpanded","setIsExpanded","setIsTruncated","hierarchyValue","hierarchyChildren","remainingValues","shouldTruncateChildren","onValueSelected","aria-expanded","Path","Nested","OpenRange","FacetType","daterange","rangeStartDate","rangeEndDate","minDateValue","setdateStartValue","maxDateValue","setdateEndValue","setStartValue","setEndValue","startVal","endVal","setdateFacetValues","data-type","defaultFacetComponents","facetType","component","DefaultCheckbox","NestedCheckbox","DefaultNestedCheckbox","DefaultSearch","DefaultLink","DefaultSlider","DefaultSwatch","DefaultOpenRange","defaultAutocompleteStrategies","SuggestionStrategy","getFacetComponents","overridedComponents","facetComponents","fType","fComponent","getAutocompleteStrategies","overridedStrategies","suggestionStrategies","sType","autocompleteStrategy","strategyMatch","SearchSuggestionsList","SuggestionList","popular","categories","products","content","hasPopular","hasCategories","hasProducts","hasContent","hasAllEmpty","SearchSuggestions","query","results","setResults","setIsLoading","debounceMs","autocompleteDebounce","autocomplete","DisplayFullResponse","strategies","autocompleteStrategies","stateReducer","changes","itemToString","matchedStrategy","strategy","handleToString","handleItemChange","initialInputValue","options","isOpen","getInputProps","openMenu","showSuggestions","aria-labelledby","id","width","onFocus","ConfigContext","context","assetPath","path","startsWith","endsWith","__webpack_public_path__"],"mappings":"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","file":"react-hawksearch-searchbox.js","sourcesContent":[" \t// install a JSONP callback for chunk loading\n \tfunction webpackJsonpCallback(data) {\n \t\tvar chunkIds = data[0];\n \t\tvar moreModules = data[1];\n \t\tvar executeModules = data[2];\n\n \t\t// add \"moreModules\" to the modules object,\n \t\t// then flag all \"chunkIds\" as loaded and fire callback\n \t\tvar moduleId, chunkId, i = 0, resolves = [];\n \t\tfor(;i < chunkIds.length; i++) {\n \t\t\tchunkId = chunkIds[i];\n \t\t\tif(Object.prototype.hasOwnProperty.call(installedChunks, chunkId) && installedChunks[chunkId]) {\n \t\t\t\tresolves.push(installedChunks[chunkId][0]);\n \t\t\t}\n \t\t\tinstalledChunks[chunkId] = 0;\n \t\t}\n \t\tfor(moduleId in moreModules) {\n \t\t\tif(Object.prototype.hasOwnProperty.call(moreModules, moduleId)) {\n \t\t\t\tmodules[moduleId] = moreModules[moduleId];\n \t\t\t}\n \t\t}\n \t\tif(parentJsonpFunction) parentJsonpFunction(data);\n\n \t\twhile(resolves.length) {\n \t\t\tresolves.shift()();\n \t\t}\n\n \t\t// add entry modules from loaded chunk to deferred list\n \t\tdeferredModules.push.apply(deferredModules, executeModules || []);\n\n \t\t// run deferred modules when all chunks ready\n \t\treturn checkDeferredModules();\n \t};\n \tfunction checkDeferredModules() {\n \t\tvar result;\n \t\tfor(var i = 0; i < deferredModules.length; i++) {\n \t\t\tvar deferredModule = deferredModules[i];\n \t\t\tvar fulfilled = true;\n \t\t\tfor(var j = 1; j < deferredModule.length; j++) {\n \t\t\t\tvar depId = deferredModule[j];\n \t\t\t\tif(installedChunks[depId] !== 0) fulfilled = false;\n \t\t\t}\n \t\t\tif(fulfilled) {\n \t\t\t\tdeferredModules.splice(i--, 1);\n \t\t\t\tresult = __webpack_require__(__webpack_require__.s = deferredModule[0]);\n \t\t\t}\n \t\t}\n\n \t\treturn result;\n \t}\n\n \t// The module cache\n \tvar installedModules = {};\n\n \t// object to store loaded and loading chunks\n \t// undefined = chunk not loaded, null = chunk preloaded/prefetched\n \t// Promise = chunk loading, 0 = chunk loaded\n \tvar installedChunks = {\n \t\t2: 0\n \t};\n\n \tvar deferredModules = [];\n\n \t// script path function\n \tfunction jsonpScriptSrc(chunkId) {\n \t\treturn __webpack_require__.p + \"react-hawksearch-\" + ({\"4\":\"vendors~rheostat\"}[chunkId]||chunkId) + \".js\"\n \t}\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n \t// This file contains only the entry chunk.\n \t// The chunk loading function for additional chunks\n \t__webpack_require__.e = function requireEnsure(chunkId) {\n \t\tvar promises = [];\n\n\n \t\t// JSONP chunk loading for javascript\n\n \t\tvar installedChunkData = installedChunks[chunkId];\n \t\tif(installedChunkData !== 0) { // 0 means \"already installed\".\n\n \t\t\t// a Promise means \"currently loading\".\n \t\t\tif(installedChunkData) {\n \t\t\t\tpromises.push(installedChunkData[2]);\n \t\t\t} else {\n \t\t\t\t// setup Promise in chunk cache\n \t\t\t\tvar promise = new Promise(function(resolve, reject) {\n \t\t\t\t\tinstalledChunkData = installedChunks[chunkId] = [resolve, reject];\n \t\t\t\t});\n \t\t\t\tpromises.push(installedChunkData[2] = promise);\n\n \t\t\t\t// start chunk loading\n \t\t\t\tvar script = document.createElement('script');\n \t\t\t\tvar onScriptComplete;\n\n \t\t\t\tscript.charset = 'utf-8';\n \t\t\t\tscript.timeout = 120;\n \t\t\t\tif (__webpack_require__.nc) {\n \t\t\t\t\tscript.setAttribute(\"nonce\", __webpack_require__.nc);\n \t\t\t\t}\n \t\t\t\tscript.src = jsonpScriptSrc(chunkId);\n\n \t\t\t\t// create error before stack unwound to get useful stacktrace later\n \t\t\t\tvar error = new Error();\n \t\t\t\tonScriptComplete = function (event) {\n \t\t\t\t\t// avoid mem leaks in IE.\n \t\t\t\t\tscript.onerror = script.onload = null;\n \t\t\t\t\tclearTimeout(timeout);\n \t\t\t\t\tvar chunk = installedChunks[chunkId];\n \t\t\t\t\tif(chunk !== 0) {\n \t\t\t\t\t\tif(chunk) {\n \t\t\t\t\t\t\tvar errorType = event && (event.type === 'load' ? 'missing' : event.type);\n \t\t\t\t\t\t\tvar realSrc = event && event.target && event.target.src;\n \t\t\t\t\t\t\terror.message = 'Loading chunk ' + chunkId + ' failed.\\n(' + errorType + ': ' + realSrc + ')';\n \t\t\t\t\t\t\terror.name = 'ChunkLoadError';\n \t\t\t\t\t\t\terror.type = errorType;\n \t\t\t\t\t\t\terror.request = realSrc;\n \t\t\t\t\t\t\tchunk[1](error);\n \t\t\t\t\t\t}\n \t\t\t\t\t\tinstalledChunks[chunkId] = undefined;\n \t\t\t\t\t}\n \t\t\t\t};\n \t\t\t\tvar timeout = setTimeout(function(){\n \t\t\t\t\tonScriptComplete({ type: 'timeout', target: script });\n \t\t\t\t}, 120000);\n \t\t\t\tscript.onerror = script.onload = onScriptComplete;\n \t\t\t\tdocument.head.appendChild(script);\n \t\t\t}\n \t\t}\n \t\treturn Promise.all(promises);\n \t};\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/assets/\";\n\n \t// on error function for async loading\n \t__webpack_require__.oe = function(err) { console.error(err); throw err; };\n\n \tvar jsonpArray = window[\"webpackJsonp\"] = window[\"webpackJsonp\"] || [];\n \tvar oldJsonpFunction = jsonpArray.push.bind(jsonpArray);\n \tjsonpArray.push = webpackJsonpCallback;\n \tjsonpArray = jsonpArray.slice();\n \tfor(var i = 0; i < jsonpArray.length; i++) webpackJsonpCallback(jsonpArray[i]);\n \tvar parentJsonpFunction = oldJsonpFunction;\n\n\n \t// add entry module to deferred list\n \tdeferredModules.push([388,0]);\n \t// run deferred modules when ready\n \treturn checkDeferredModules();\n","export class Pagination {\r\n\t/** Number of total items in the result set. */\r\n\tpublic NofResults: number;\r\n\r\n\t/** The page number returned. */\r\n\tpublic CurrentPage: number;\r\n\r\n\t/** The number of items returned for the page. */\r\n\tpublic MaxPerPage: number;\r\n\r\n\t/** The total number of pages for the result set - with the current @see MaxPerPage. */\r\n\tpublic NofPages: number;\r\n\r\n\t/** Set of pagination options */\r\n\tpublic Items: PaginationItem[];\r\n\r\n\tpublic constructor(init: Pagination) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new PaginationItem(i));\r\n\t}\r\n}\r\n\r\nexport class PaginationItem {\r\n\t/** Display label for user's pagination option (i.e. 24 per page). */\r\n\tpublic Label: string;\r\n\t/** The maximum number of items that will be returned per page when this option is selected. */\r\n\tpublic PageSize: number;\r\n\r\n\t/** Indicates if this is the option selected. Only one pagination item will have this set to `true`. */\r\n\tpublic Selected: boolean;\r\n\r\n\t/** Indicates if this is the default option. Only one pagination item will have this set to `true`. */\r\n\tpublic Default: boolean;\r\n\r\n\tpublic constructor(init: PaginationItem) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { Explain } from './Explain';\r\n\r\nexport class Result {\r\n\t/** Unique identifier for this search result item. */\r\n\tpublic DocId: string;\r\n\r\n\t/** Calculated relevancy score. */\r\n\tpublic Score: number;\r\n\r\n\t/**\r\n\t * Contains the fields for the search result item, as an object of string keys to an array\r\n\t * of string values. The keys correspond to the name of the field within the hawk dashboard,\r\n\t * and the value of the map is an array of strings for each of the values for that field.\r\n\t */\r\n\tpublic Document?: { [field: string]: string[] };\r\n\r\n\tpublic Explain?: Explain;\r\n\r\n\tpublic IsPin: boolean;\r\n\r\n\tpublic BestFragment: string;\r\n\t/**\r\n\t * Returns a single document value, by the given field name. If the field does not exist in\r\n\t * the document, or has no values, then `undefined` is returned instead.\r\n\t * @param field The field within the result document to retrieve the value of.\r\n\t */\r\n\tpublic getDocumentValue(field: string): string | undefined {\r\n\t\tif (this.Document) {\r\n\t\t\tconst values = this.Document[field];\r\n\r\n\t\t\tif (values && values.length > 0) {\r\n\t\t\t\treturn values[0];\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn undefined;\r\n\t}\r\n\r\n\tpublic constructor(init: Result) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Sorting {\r\n\t/** The sorting items. */\r\n\tpublic Items: SortingItem[];\r\n\r\n\tpublic constructor(init: Sorting) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new SortingItem(i));\r\n\t}\r\n}\r\n\r\nexport class SortingItem {\r\n\t/** Name of the sorting option. This is the label to display to users. */\r\n\tpublic Label: string;\r\n\t/**\r\n\t * The value to be used to specify the sort order once user selects it. This value is passed in the @see Request.SortBy\r\n\t * field in the @see Request object.\r\n\t */\r\n\tpublic Value: string;\r\n\r\n\t/** Indicates if this sorting option was configured to be the default. */\r\n\tpublic IsDefault: boolean;\r\n\t/** Indicates if this sorting option is currently being used for the current result set. */\r\n\tpublic Selected: boolean;\r\n\r\n\tpublic constructor(init: SortingItem) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Selections {\r\n\t[field: string]: SelectionFacet;\r\n\r\n\tpublic constructor(init: Selections) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tObject.keys(init).forEach(key => {\r\n\t\t\tconst selFacet = init[key];\r\n\r\n\t\t\tthis[key] = new SelectionFacet(selFacet);\r\n\t\t});\r\n\t}\r\n}\r\n\r\nexport class SelectionFacet {\r\n\t/** Display name for facet. */\r\n\tpublic Label: string;\r\n\r\n\t/** Will contain an entry for each selection made within the facet. */\r\n\tpublic Items: SelectionFacetValue[];\r\n\r\n\tpublic constructor(init: SelectionFacet) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Items = init.Items.map(i => new SelectionFacetValue(i));\r\n\t}\r\n}\r\n\r\nexport class SelectionFacetValue {\r\n\t/** Display label for facet value. */\r\n\tpublic Label: string;\r\n\r\n\t/** Value for facet value. */\r\n\tpublic Value: string;\r\n\r\n\tpublic constructor(init: SelectionFacetValue) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Value {\r\n\t/** Label of the value to display. */\r\n\tpublic Label?: string;\r\n\t/** Value to use when setting the facet value selection. */\r\n\tpublic Value?: string;\r\n\r\n\t/** Number of results in current set that have this facet value. */\r\n\tpublic Count: number;\r\n\t/** Indicates if this facet value has been selected. */\r\n\tpublic Selected: boolean;\r\n\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeStart indicates what the starting point of the range\r\n\t * to display, either on basis of what the user selected by sliding the slider, or if they have no\r\n\t * selection it reflects the lowest price product.\r\n\t */\r\n\tpublic RangeStart?: string;\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeEnd indicates what the end point of the range to\r\n\t * display is, either on basis of what the user selected by sliding the slider, or if they have no\r\n\t * selection, it reflects the highest price product.\r\n\t */\r\n\tpublic RangeEnd?: string;\r\n\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeMin indicates lowest value for the range in the list\r\n\t * of products displayed.\r\n\t */\r\n\tpublic RangeMin?: string;\r\n\t/**\r\n\t * Used for displaying the slider facet. @see RangeMax indicates highest value for the range in the list\r\n\t * of products displayed.\r\n\t */\r\n\tpublic RangeMax?: string;\r\n\r\n\t/** Used for nested facets. */\r\n\tpublic Path?: string;\r\n\r\n\t/** Set of pagination options */\r\n\tpublic Children: Value[];\r\n\r\n\tpublic Level: number;\r\n\r\n\tpublic constructor(init: Value) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Swatch {\r\n\t/** Match this value to the @see Value object in the @see Values array of @see Facet. */\r\n\tpublic Value: string;\r\n\r\n\t/** Name of the asset. */\r\n\tpublic AssetName: string;\r\n\t/** URL of the asset. */\r\n\tpublic AssetUrl: string;\r\n\r\n\t/** Indicates if value is the default. */\r\n\tpublic IsDefault: boolean;\r\n\r\n\t/** Color of the asset. */\r\n\tpublic Color: string;\r\n\r\n\tpublic constructor(init: Swatch) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","export class Range {\r\n\t/** Label of the value to display. */\r\n\tpublic Label: string;\r\n\t/** Value to use when setting the facet value selection. */\r\n\tpublic Value: string;\r\n\r\n\t/** Indicates if the values are numeric. */\r\n\tpublic IsNumeric: boolean;\r\n\r\n\t/** Lower value of the range. */\r\n\tpublic LBound: string;\r\n\t/** Upper value of the range. */\r\n\tpublic UBound: string;\r\n\t/** Asset Url */\r\n\tpublic AssetFullUrl: string;\r\n\r\n\tpublic constructor(init: Range) {\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { Value } from './Value';\r\nimport { Swatch } from './Swatch';\r\nimport { Range } from './Range';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\n\r\nexport class Facet {\r\n\t/** Unique identifier of the facet. */\r\n\tpublic FacetId: number;\r\n\r\n\t/** Display name of the facet. */\r\n\tpublic Name: string;\r\n\r\n\t/** The name of the field that is linked to this facet. */\r\n\tpublic Field: string;\r\n\r\n\tpublic FieldType: 'string' | 'range' | 'numeric' | 'search' | 'tab';\r\n\tpublic FacetType: FacetType;\r\n\r\n\tpublic DisplayType: 'default' | 'scrolling' | 'truncating';\r\n\r\n\t/** Indicates the maximum number of facet values that are returned. */\r\n\tpublic MaxCount: number;\r\n\r\n\t/** Indicates the minimum number of results each facet value needs to have in order to be returned. */\r\n\tpublic MinHitCount: number;\r\n\r\n\t/**\r\n\t * If this is set, it is to be used as the facet name if passed in the `FacetSelections`. If not set,\r\n\t * the value of the Field object would be used. (This is only applicable when a slider and range\r\n\t * facets are both configured for the same field.)\r\n\t */\r\n\tpublic ParamName?: string;\r\n\r\n\t/**\r\n\t * Indicates the sorting logic that is used for this facet’s values. The possible values for this\r\n\t * are the parameters for sorting set options that are configured in \"Workbench > Data Configuration\r\n\t * > Sorting/Pagination\".\r\n\t */\r\n\tpublic SortBy: string;\r\n\r\n\t/** Indicates if the user should be able to apply more than one filter value from this facet. */\r\n\tpublic ExpandSelection: boolean;\r\n\r\n\t/** Indicates if facet values are numeric. */\r\n\tpublic IsNumeric: boolean;\r\n\t/** Indicates if facet values are currency (and should be displayed appropriately). */\r\n\tpublic IsCurrency: boolean;\r\n\t/** Indicates currency symbol in case of currency type facets */\r\n\tpublic CurrencySymbol: string;\r\n\t/** Indicates if the facet can be collapsed and expanded by the user. */\r\n\tpublic IsCollapsible: boolean;\r\n\t/** If @see IsCollapsible is `true`, this indicates if the facet should initially be collapsed or expanded. */\r\n\tpublic IsCollapsedDefault: boolean;\r\n\t/** Indicates if the facet is set to be visible. */\r\n\tpublic IsVisible: boolean;\r\n\t/**\r\n\t * Indicates if search is enabled for this facet. If it is enabled, a search box should be available for\r\n\t * users to filter the facet values by typing in the search box.\r\n\t */\r\n\tpublic IsSearch: boolean;\r\n\r\n\t/**\r\n\t * If facet display type is Scrolling, this value is the height in pixels for the window inside scroll box.\r\n\t * Only to be used if @see DisplayType is `\"scrolling\"`.\r\n\t */\r\n\tpublic ScrollHeight: number;\r\n\t/**\r\n\t * If the number of facet values exceeds this number and @see DisplayType is `\"scrolling\"`, then the facet\r\n\t * should be displayed as scrolling list; if not, display as `\"default\"`.\r\n\t */\r\n\tpublic ScrollThreshold: number;\r\n\t/**\r\n\t * If the number of facet values exceeds this number and @see DisplayType is `\"truncate\"`, then the facet\r\n\t * should be displayed as truncated list; if not, display as `\"default\"`.\r\n\t */\r\n\tpublic TruncateThreshold: number;\r\n\t/**\r\n\t * To be used if @see IsSearch is `true`. The number of facet values must be this number or higher for the\r\n\t * facet search box to display.\r\n\t */\r\n\tpublic SearchThreshold: number;\r\n\r\n\t/** Text to display when user hovers over a help icon. */\r\n\tpublic Tooltip?: string;\r\n\r\n\t/**\r\n\t * If `false`, indicates that sometimes this facet will not be returned. The conditions that trigger its\r\n\t * display are maintained in the Workbench.\r\n\t */\r\n\tpublic AlwaysVisible: boolean;\r\n\r\n\t/**\r\n\t * The display order of the facet in the facet list.\r\n\t */\r\n\tpublic SortOrder: number;\r\n\r\n\t/** This is maximum number of values that could be returned for the facet. */\r\n\tpublic NofVisible: number;\r\n\r\n\t/** Will be included if @see FacetType is `\"swatch\"`. */\r\n\tpublic SwatchData: Swatch[];\r\n\r\n\t/** Indicates type of facet range display. */\r\n\tpublic FacetRangeDisplayType: number;\r\n\r\n\t/** Indicates if setting in Workbench is set to On or Off. */\r\n\tpublic PreloadChildren: boolean;\r\n\r\n\t/**\r\n\t * To be used if @see FacetType is `\"slider\"`. If @see ShowSliderInputs is `true`, input boxes should be\r\n\t * available for user to enter values.\r\n\t */\r\n\tpublic ShowSliderInputs: boolean;\r\n\r\n\t/** Always present, but will only be populated if the facet is numeric and not a slider. */\r\n\tpublic Ranges: Range[];\r\n\t/** The values for this facet. */\r\n\tpublic Values: Value[];\r\n\t// Data type for datetime facet type\r\n\tpublic DataType?: string;\r\n\r\n\t/** Whether or not the facet should be rendered as truncated. */\r\n\tpublic get shouldTruncate() {\r\n\t\t// the facet does truncated listing of values if configured for truncating and we have too many facets\r\n\t\treturn this.DisplayType === 'truncating' && this.Values.length > this.TruncateThreshold;\r\n\t}\r\n\t/** Whether or not the facet should have a quick lookup search input. */\r\n\tpublic get shouldSearch() {\r\n\t\t// the facet should have a search box if configured to do so, and the number of facet values is greater\r\n\t\t// than the threshold\r\n\t\treturn this.IsSearch && this.Values.length > this.SearchThreshold;\r\n\t}\r\n\r\n\t/**\r\n\t * Returns the name of the key when using this facet for a selection. This will take into consideration\r\n\t * @see ParamName and @see Field in determining which value should be returned.\r\n\t */\r\n\tpublic get selectionField() {\r\n\t\treturn this.ParamName ? this.ParamName : this.Field;\r\n\t}\r\n\r\n\tpublic constructor(init: Facet) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.SwatchData = init.SwatchData.map(s => new Swatch(s));\r\n\t\tthis.Ranges = init.Ranges.map(r => new Range(r));\r\n\t\tthis.Values = init.Values.map(v => new Value(v));\r\n\t}\r\n}\r\n","export class Rule {\r\n\tpublic RuleType: RuleType;\r\n\tpublic Field: string;\r\n\tpublic Condition: string;\r\n\tpublic Value: string;\r\n\tpublic Operator: RuleOperatorType;\r\n\r\n\tpublic Rules: Rule[];\r\n\tpublic Parent: Rule;\r\n\tpublic constructor(init: Rule) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init.Parent) {\r\n\t\t\tthis.Parent = new Rule(init.Parent);\r\n\t\t}\r\n\t\tthis.Rules = init.Rules ? init.Rules.map(i => new Rule(i)) : [];\r\n\t}\r\n}\r\n\r\nexport enum RuleType {\r\n\tGroup = 0,\r\n\tEval = 1,\r\n}\r\n\r\nexport enum RuleOperatorType {\r\n\tAll = 0,\r\n\tAny = 1,\r\n\tNone = 2,\r\n}\r\n","import { Rule } from './Rule';\r\n\r\nexport class BannerTrigger {\r\n\tpublic BannerGroupId: number;\r\n\tpublic Name: string;\r\n\tpublic SortOrder: number;\r\n\tpublic Rule: Rule;\r\n\r\n\tpublic constructor(init: BannerTrigger) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Rule = new Rule(this.Rule);\r\n\t}\r\n}\r\n","import { ContentType } from './ContentType';\r\nimport { Result } from './Result';\r\nimport { BannerTrigger } from './Trigger';\r\n\r\nexport class FeaturedItems {\r\n\tpublic Items: FeaturedItem[];\r\n\r\n\tpublic constructor(init: FeaturedItems) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init && init.Items) {\r\n\t\t\tthis.Items = init.Items.map(i => new FeaturedItem(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class Merchandising {\r\n\tpublic Items: MerchandisingItem[];\r\n\r\n\tpublic constructor(init: Merchandising) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init && init.Items) {\r\n\t\t\tthis.Items = init.Items.map(i => new MerchandisingItem(i));\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class PageContentItem {\r\n\tpublic Zone: string;\r\n\tpublic ContentType: ContentType;\r\n\tpublic ImageUrl: string;\r\n\tpublic AltTag: string;\r\n\tpublic ForwardUrl: string;\r\n\tpublic Output: any;\r\n\tpublic WidgetArgs: string;\r\n\tpublic Title: string;\r\n\tpublic Name: string;\r\n\tpublic DateFrom: string;\r\n\tpublic DateTo: string;\r\n\tpublic IsMobile: boolean;\r\n\tpublic MobileContentType: string;\r\n\tpublic MobileImageUrl: string;\r\n\tpublic MobileOutput: string;\r\n\tpublic MobileWidgetArgs: string;\r\n\tpublic IsTrackingEnabled: boolean;\r\n\tpublic MobileIsTrackingEnabled?: boolean;\r\n\tpublic FeaturedItems: Result[];\r\n\tpublic Items: Result[];\r\n\tpublic Target: string;\r\n\tpublic MobileTarget: string;\r\n\tpublic MobileAltTag: string;\r\n\tpublic MobileForwardUrl: string;\r\n\tpublic MobileWidth: string;\r\n\tpublic MobileHeight: string;\r\n\tpublic Trigger: BannerTrigger;\r\n\r\n\tpublic constructor(init: PageContentItem) {\r\n\t\tObject.assign(this, init);\r\n\t\tif (init.FeaturedItems) {\r\n\t\t\tthis.FeaturedItems = init.FeaturedItems.map(i => new Result(i));\r\n\t\t}\r\n\t\tif (init.Trigger) {\r\n\t\t\tthis.Trigger = new BannerTrigger(init.Trigger);\r\n\t\t}\r\n\t}\r\n}\r\n\r\nexport class FeaturedItem extends PageContentItem {\r\n\tpublic Items: Result[];\r\n\r\n\tpublic constructor(init: FeaturedItem) {\r\n\t\tsuper(init);\r\n\t\tObject.assign(this, init);\r\n\t\tthis.Items = init.Items.map(i => new Result(i));\r\n\t}\r\n}\r\n\r\nexport class MerchandisingItem extends PageContentItem {\r\n\tpublic constructor(init: MerchandisingItem) {\r\n\t\tsuper(init);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n","import { PageContentItem } from './Merchandising';\r\n\r\nexport class PageContent {\r\n\tpublic ZoneName: string;\r\n\tpublic Items: PageContentItem[];\r\n\tpublic constructor(init: PageContent) {\r\n\t\tObject.assign(this, init);\r\n\t\tthis.Items = init.Items.map(i => new PageContentItem(i));\r\n\t}\r\n}\r\n","import { Pagination } from './Pagination';\r\nimport { Result } from './Result';\r\nimport { Sorting } from './Sorting';\r\nimport { Selections } from './Selections';\r\nimport { Facet } from 'models/Facets';\r\nimport { Merchandising, FeaturedItems } from './Merchandising';\r\nimport { StringLiteral } from '@babel/types';\r\nimport { PageContent } from './PageContent';\r\n\r\nexport class Response {\r\n\t/** Indicates if request was successful. */\r\n\tpublic Success: boolean;\r\n\r\n\t/** Summary of pagination details and a set of pagination options. */\r\n\tpublic Pagination: Pagination;\r\n\r\n\t/**\r\n\t * The Keyword value that was sent to Hawksearch in the request. If no Keyword was set in the\r\n\t * request, the value will be empty.\r\n\t */\r\n\tpublic Keyword: string;\r\n\r\n\t/**\r\n\t * If this is populated, it indicates that the Keyword value returned 0 results, but the results\r\n\t * in this response are from this AdjustedKeyword.  A message should be displayed to the user\r\n\t * informing them that their search was corrected to this string.\r\n\t *\r\n\t * This is the result of Auto Correct, which is configured in the Workbench > Keyword Search >\r\n\t * Did You Mean.\r\n\t */\r\n\tpublic AdjustedKeyword?: string;\r\n\r\n\t/** An entry in the array for each item returned in search results. */\r\n\tpublic Results: Result[];\r\n\r\n\tpublic Facets: Facet[];\r\n\r\n\t/**\r\n\t * Will contain an entry for each facet that has one or more selections. Will be empty if no facet\r\n\t * selections have been made.\r\n\t */\r\n\tpublic Selections: Selections;\r\n\r\n\tpublic Sorting: Sorting;\r\n\r\n\t/**\r\n\t * If any strings are returned in the array, they should be displayed to the user as suggested\r\n\t * search terms.\r\n\t *\r\n\t * This is the result of Did You Mean, which is configured in the Workbench > Keyword Search >\r\n\t * Did You Mean.\r\n\t */\r\n\tpublic DidYouMean: string[];\r\n\r\n\t/**\r\n\t * Merchandising can be placed by using Campaigns in the Hawksearch Workbench. The Campaign will\r\n\t * determine if the content should appear and in what zone.\r\n\t */\r\n\tpublic Merchandising: Merchandising; // TODO: merchandising object\r\n\tpublic FeaturedItems: FeaturedItems; // TODO: featured items object\r\n\r\n\tpublic SearchDuration: number;\r\n\r\n\tpublic DocExplain?: string;\r\n\r\n\t/**\r\n\t * Properties that gets populated when user requests landing page related results\r\n\t *\r\n\t */\r\n\r\n\tpublic Breadcrumb: string;\r\n\r\n\tpublic CustomHtml: string;\r\n\r\n\tpublic HeaderTitle: string;\r\n\r\n\tpublic MetaDescription: string;\r\n\r\n\tpublic MetaKeywords: string;\r\n\tpublic MetaRobots: string;\r\n\tpublic Name: string;\r\n\tpublic Next: string;\r\n\tpublic Prev: string;\r\n\tpublic PageHeading: string;\r\n\tpublic PageContent: PageContent[];\r\n\tpublic RelCanonical: string;\r\n\tpublic PageLayoutId: number;\r\n\tpublic TrackingId: string;\r\n\tpublic VisitorTargets: Array<{ Id: number; Name: string }>;\r\n\tpublic Redirect: { Location?: string; Target?: string };\r\n\r\n\t// end of landing page related fields\r\n\tpublic constructor(init: Response) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Pagination = new Pagination(init.Pagination);\r\n\t\tthis.Merchandising = new Merchandising(init.Merchandising);\r\n\t\tthis.FeaturedItems = new FeaturedItems(init.FeaturedItems);\r\n\t\tthis.Results = init.Results.map(r => new Result(r));\r\n\t\tthis.Facets = init.Facets.map(f => new Facet(f));\r\n\t\tthis.PageContent = init.PageContent ? init.PageContent.map(p => new PageContent(p)) : [];\r\n\t\tthis.Selections = new Selections(init.Selections);\r\n\t\tthis.Sorting = new Sorting(init.Sorting);\r\n\t}\r\n}\r\n","/** An object that contains the data related to the client making search or autosuggest requests. */\r\nexport class ClientData {\r\n\t/** Unique identifier used for tracking visitors. */\r\n\tpublic VisitorId: string;\r\n\r\n\tpublic VisitId: string;\r\n\r\n\t/** Custom information used for evaluating Visitor Targets. */\r\n\tpublic Custom?: string;\r\n\t/** Client IP used for evaluating Visitor Targets. */\r\n\tpublic HttpTrueClientIp?: string;\r\n\t/** Browser user agent used for evaluating Visitor Targets. */\r\n\tpublic UserAgent?: string;\r\n\r\n\tpublic PreviewBuckets?: number[];\r\n\t/**\r\n\t * The source used for evaluating Visitor Targets. This was previously called 'hawksource' and can\r\n\t * be used to track the source the user came from (i.e. email, instagram, etc).\r\n\t */\r\n\tpublic Source?: string;\r\n}\r\n","export enum ContentType {\r\n\tImage = 'image',\r\n\tWidget = 'widget',\r\n\tFeatured = 'featured',\r\n\tCustom = 'custom',\r\n\tLandingPage = 'landingPage',\r\n}\r\n","export const getVisitorExpiry = () => {\r\n\tconst d = new Date();\r\n\t// 1 year\r\n\td.setTime(d.getTime() + 360 * 24 * 60 * 60 * 1000);\r\n\treturn d.toUTCString();\r\n};\r\n\r\nexport const getVisitExpiry = () => {\r\n\tconst d = new Date();\r\n\t// 4 hours\r\n\td.setTime(d.getTime() + 4 * 60 * 60 * 1000);\r\n\treturn d.toUTCString();\r\n};\r\n\r\nexport const createGuid = () => {\r\n\tconst s: any[] = [];\r\n\tconst hexDigits = '0123456789abcdef';\r\n\tfor (let i = 0; i < 36; i++) {\r\n\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n\t}\r\n\ts[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\r\n\t// tslint:disable-next-line: no-bitwise\r\n\ts[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n\ts[8] = s[13] = s[18] = s[23] = '-';\r\n\r\n\tconst uuid = s.join('');\r\n\treturn uuid;\r\n};\r\n\r\nexport const getCookie = name => {\r\n\tconst nameEQ = name + '=';\r\n\tconst ca = document.cookie.split(';');\r\n\t// tslint:disable-next-line: prefer-for-of\r\n\tfor (let i = 0; i < ca.length; i++) {\r\n\t\tlet c = ca[i];\r\n\t\twhile (c.charAt(0) === ' ') {\r\n\t\t\tc = c.substring(1, c.length);\r\n\t\t}\r\n\t\tif (c.indexOf(nameEQ) === 0) {\r\n\t\t\treturn c.substring(nameEQ.length, c.length);\r\n\t\t}\r\n\t}\r\n\treturn null;\r\n};\r\n\r\nexport const setCookie = (name, value, expiry) => {\r\n\tlet expires;\r\n\tif (expiry) {\r\n\t\texpires = '; expires=' + expiry;\r\n\t} else {\r\n\t\texpires = '';\r\n\t}\r\n\tdocument.cookie = name + '=' + value + expires + '; path=/';\r\n};\r\n","import { useEffect } from 'react';\r\nimport axios, { CancelToken } from 'axios';\r\n\r\nimport { SearchStore, FacetSelectionState } from './Store';\r\nimport HawkClient from 'net/HawkClient';\r\nimport { Response, Request, FacetSelections } from 'models/Search';\r\nimport { useMergableState } from 'util/MergableState';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport { Facet, Value } from 'models/Facets';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\nimport { Request as PinItemRequest } from 'models/PinItems';\r\nimport { Request as SortingOrderRequest } from 'models/PinItemsOrder';\r\nimport { getCookie, setCookie, createGuid, getVisitExpiry, getVisitorExpiry } from 'helpers/utils';\r\nimport TrackingEvent, { SearchType } from 'components/TrackingEvent';\r\nexport interface SearchActor {\r\n\t/**\r\n\t * Performs a search with the currently configured pending search request. The search request can be\r\n\t * configured via the `setSearch` method. This method usually doesn't need to be called directly, as\r\n\t * the `StoreProvider` component will usually trigger searches directly in response to calls to\r\n\t * `setSearch`.\r\n\t * @returns A promise that resolves when the search request has been completed.\r\n\t */\r\n\tsearch(cancellationToken?: CancelToken): Promise<void>;\r\n\r\n\t/**\r\n\t * Configures the next search request that will be executed. This will also execute a search in response to\r\n\t * the next search request changing.\r\n\t * @param search The partial search request object. This will be merged with previous calls to `setSearch`.\r\n\t * @param doHistory Whether or not this search request will push a history entry into the browser. If\r\n\t * \t\t\t\t\tnot specified, the default is `true`.\r\n\t */\r\n\tsetSearch(search: Partial<Request>, doHistory?: boolean): void;\r\n\r\n\t/**\r\n\t * Toggles a facet value for the next search request that will be executed. If the given facet had previously\r\n\t * been selected, it will be unselected. If the negation state of a selected facet is changed, the selection\r\n\t * will have its negation state changed. Internally, this will call `setSearch` to configure the next search\r\n\t * with this selected facet.\r\n\t * @param facet The facet for which the value is being selected.\r\n\t * @param facetValue The facet value being selected.\r\n\t * @param negate  Whether or not this selection is considered a negation.\r\n\t */\r\n\ttoggleFacetValue(facet: Facet | string, facetValue: Value | string, negate?: boolean): void;\r\n\r\n\tsetFacetValues(facet: Facet | string, facetValues: Value[] | string[]): void;\r\n\r\n\t/**\r\n\t * Entirely clears all the values of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t */\r\n\tclearFacet(facet: Facet | string): void;\r\n\r\n\t/**\r\n\t * Clears a given facet value of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t * @param facetValue The facet value to clear.\r\n\t */\r\n\tclearFacetValue(facet: Facet | string, facetValue?: Value | string): void;\r\n\r\n\t/**\r\n\t * Clears all selected facets from the current selection.\r\n\t */\r\n\tclearAllFacets(): void;\r\n\r\n\t// Pin items\r\n\tpinItem(payload: PinItemRequest, cancellationToken?: CancelToken): Promise<any>;\r\n\r\n\t// update sorting order of pinned items\r\n\tupdatePinOrder(payload: SortingOrderRequest, cancellationToken?: CancelToken): Promise<any>;\r\n}\r\n\r\nexport function useHawkState(initialSearch?: Partial<Request>): [SearchStore, SearchActor] {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst client = new HawkClient(config);\r\n\r\n\tconst [store, setStore] = useMergableState(\r\n\t\tnew SearchStore({\r\n\t\t\tpendingSearch: initialSearch || {\r\n\t\t\t\tFacetSelections: {},\r\n\t\t\t},\r\n\t\t\tisLoading: true,\r\n\t\t}),\r\n\t\tSearchStore\r\n\t);\r\n\r\n\tuseEffect(() => {\r\n\t\t// when the pending search changes, trigger a search\r\n\r\n\t\tconst cts = axios.CancelToken.source();\r\n\t\tsearch(cts.token);\r\n\r\n\t\treturn () => {\r\n\t\t\tcts.cancel();\r\n\t\t};\r\n\t}, [store.pendingSearch]);\r\n\r\n\t/**\r\n\t * Performs a search with the currently configured pending search request. The search request can be\r\n\t * configured via the `setSearch` method. This method usually doesn't need to be called directly, as\r\n\t * the `StoreProvider` component will usually trigger searches directly in response to calls to\r\n\t * `setSearch`.\r\n\t * @returns A promise that resolves when the search request has been completed.\r\n\t */\r\n\tasync function search(cancellationToken?: CancelToken): Promise<void> {\r\n\t\tsetStore({ isLoading: true });\r\n\r\n\t\tlet searchResults: Response | null = null;\r\n\t\tconst searchParams = {\r\n\t\t\t// the search request being executed is spread from the pendingSearch\r\n\t\t\t...store.pendingSearch,\r\n\t\t\t// pass parameter for extended response\r\n\t\t\tIsInPreview: config.isInPreview,\r\n\t\t\t// and override some of the request fields with config values\r\n\t\t\tClientGuid: config.clientGuid,\r\n\t\t\tKeyword: store.pendingSearch.Keyword\r\n\t\t\t\t? decodeURIComponent(store.pendingSearch.Keyword || '')\r\n\t\t\t\t: store.pendingSearch.Keyword,\r\n\t\t};\r\n\r\n\t\t// The index name in the configuration takes priority over the one supplied from the URL\r\n\t\tif (config.indexName) {\r\n\t\t\tObject.assign(searchParams, { IndexName: config.indexName });\r\n\t\t}\r\n\r\n\t\t// If the index name is required and no value is provided from the config or the URL, the request is canceled\r\n\t\tif (config.indexNameRequired && !searchParams.IndexName) {\r\n\t\t\tsetStore({ isLoading: false });\r\n\t\t\treturn;\r\n\t\t}\r\n\t\t// Fill clientdata\r\n\t\tlet visitId = getCookie('hawk_visit_id');\r\n\t\tlet visitorId = getCookie('hawk_visitor_id');\r\n\t\tif (!visitId) {\r\n\t\t\tsetCookie('hawk_visit_id', createGuid(), getVisitExpiry());\r\n\t\t\tvisitId = getCookie('hawk_visit_id');\r\n\t\t}\r\n\t\tif (!visitorId) {\r\n\t\t\tsetCookie('hawk_visitor_id', createGuid(), getVisitorExpiry());\r\n\t\t\tvisitorId = getCookie('hawk_visitor_id');\r\n\t\t}\r\n\t\tconst updatedRequest = {\r\n\t\t\tClientData: {\r\n\t\t\t\tVisitorId: visitorId || '',\r\n\t\t\t\tVisitId: visitId || '',\r\n\t\t\t\tUserAgent: navigator.userAgent,\r\n\t\t\t\tPreviewBuckets: store.searchResults ? store.searchResults.VisitorTargets.map(v => v.Id) : [],\r\n\t\t\t},\r\n\t\t\t...searchParams,\r\n\t\t};\r\n\r\n\t\ttry {\r\n\t\t\tsearchResults = await client.search(updatedRequest, cancellationToken);\r\n\t\t} catch (error) {\r\n\t\t\tif (axios.isCancel(error)) {\r\n\t\t\t\t// if the request was cancelled, it's because this component was updated\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error('Search request error:', error);\r\n\t\t\tsetStore({ requestError: true });\r\n\t\t}\r\n\r\n\t\tsetStore({ isLoading: false });\r\n\r\n\t\tif (searchResults) {\r\n\t\t\tif (!searchResults.Success) {\r\n\t\t\t\tconsole.error('Search result error:', searchResults);\r\n\t\t\t\tsetStore({ requestError: true });\r\n\t\t\t} else {\r\n\t\t\t\tsetStore({\r\n\t\t\t\t\tsearchResults: new Response(searchResults),\r\n\t\t\t\t\trequestError: false,\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\tasync function pinItem(request: PinItemRequest, cancellationToken?: CancelToken): Promise<any> {\r\n\t\treturn await client.pinItem(request, cancellationToken);\r\n\t}\r\n\r\n\tasync function updatePinOrder(request: SortingOrderRequest, cancellationToken?: CancelToken): Promise<any> {\r\n\t\treturn await client.updatePinOrder(request, cancellationToken);\r\n\t}\r\n\r\n\t/**\r\n\t * Configures the next search request that will be executed. This will also execute a search in response to\r\n\t * the next search request changing.\r\n\t * @param search The partial search request object. This will be merged with previous calls to `setSearch`.\r\n\t * @param doHistory Whether or not this search request will push a history entry into the browser. If\r\n\t * \t\t\t\t\tnot specified, the default is `true`.\r\n\t */\r\n\tfunction setSearch(pendingSearch: Partial<Request>, doHistory?: boolean): void {\r\n\t\tif (doHistory === undefined) {\r\n\t\t\tdoHistory = true;\r\n\t\t}\r\n\r\n\t\tsetStore(prevState => {\r\n\t\t\tif (prevState.searchResults && prevState.searchResults.TrackingId) {\r\n\t\t\t\tif (prevState.pendingSearch.Keyword !== pendingSearch.Keyword) {\r\n\t\t\t\t\tTrackingEvent.track('searchtracking', {\r\n\t\t\t\t\t\ttrackingId: prevState.searchResults.TrackingId,\r\n\t\t\t\t\t\ttypeId: SearchType.Initial,\r\n\t\t\t\t\t});\r\n\t\t\t\t} else {\r\n\t\t\t\t\tTrackingEvent.track('searchtracking', {\r\n\t\t\t\t\t\ttrackingId: prevState.searchResults.TrackingId,\r\n\t\t\t\t\t\ttypeId: SearchType.Refinement,\r\n\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t\tconst newState = {\r\n\t\t\t\tpendingSearch: { ...prevState.pendingSearch, ...pendingSearch },\r\n\t\t\t\tdoHistory,\r\n\t\t\t};\r\n\t\t\tif (newState.pendingSearch.Keyword === '') {\r\n\t\t\t\tnewState.pendingSearch.Keyword = undefined;\r\n\t\t\t}\r\n\r\n\t\t\treturn newState;\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Sets the facet selections and search within configuration for the next search request. This will also\r\n\t * clear the page number of the next request to display the first page of results.\r\n\t * @param selections The facet selections to set.\r\n\t * @param searchWithin The search within value to set.\r\n\t */\r\n\tfunction setSearchSelections(selections?: FacetSelections, searchWithin?: string) {\r\n\t\tsetSearch({\r\n\t\t\tFacetSelections: selections,\r\n\t\t\tSearchWithin: searchWithin,\r\n\r\n\t\t\t// when we change facet selections, also clear the current page so that we navigate\r\n\t\t\t// back to the first page of results\r\n\t\t\tPageNo: undefined,\r\n\t\t});\r\n\t}\r\n\r\n\t/**\r\n\t * Toggles a facet value for the next search request that will be executed. Internally, this will call\r\n\t * `setSearch` to configure the next search with this selected facet.\r\n\t * @param facet The facet for which the value is being selected.\r\n\t * @param facetValue The facet value being selected.\r\n\t * @param negate  Whether or not this selection is considered a negation.\r\n\t */\r\n\tfunction toggleFacetValue(facet: Facet | string, facetValue: Value | string, negate?: boolean): void {\r\n\t\tif (negate === undefined) {\r\n\t\t\tnegate = false;\r\n\t\t}\r\n\r\n\t\tconst facetName: string = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tlet facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set the search within to the facet value provided\r\n\t\t\tsetSearchSelections(facetSelections, /* searchWithin */ valueValue);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!facetSelections) {\r\n\t\t\tfacetSelections = {};\r\n\t\t}\r\n\r\n\t\tif (!facetSelections[facetField]) {\r\n\t\t\tfacetSelections[facetField] = [];\r\n\t\t}\r\n\r\n\t\tconst { state: selState, selectionIndex } = store.isFacetSelected(facet, facetValue);\r\n\r\n\t\tif (selState === FacetSelectionState.Selected || selState === FacetSelectionState.Negated) {\r\n\t\t\t// we're selecting this facet, and it's already selected\r\n\r\n\t\t\t// first, remove it from our selections\r\n\t\t\tfacetSelections[facetField]!.splice(selectionIndex!, 1);\r\n\r\n\t\t\tif (\r\n\t\t\t\t(selState === FacetSelectionState.Selected && negate) ||\r\n\t\t\t\t(selState === FacetSelectionState.Negated && !negate)\r\n\t\t\t) {\r\n\t\t\t\t// if we're toggling from negation to non-negation or vice versa, then push the new selection\r\n\t\t\t\tfacetSelections[facetField]!.push(negate ? `-${valueValue}` : valueValue);\r\n\t\t\t} else {\r\n\t\t\t\t// if we're not toggling the negation, nothing to do because we already removed the selection above\r\n\t\t\t}\r\n\t\t} else {\r\n\t\t\t// not selected, so we want to select it\r\n\t\t\tfacetSelections[facetField]!.push(negate ? `-${valueValue}` : valueValue);\r\n\t\t}\r\n\r\n\t\tif (facetSelections[facetField]!.length === 0) {\r\n\t\t\t// clean up any facets that no longer have any selected facet values\r\n\t\t\tdelete facetSelections[facetField];\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\tfunction setFacetValues(facet: Facet | string, facetValues: Value[] | string[]): void {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tlet facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\tif (!facetSelections) {\r\n\t\t\tfacetSelections = {};\r\n\t\t}\r\n\r\n\t\tfacetSelections[facetField] = [];\r\n\r\n\t\tfor (const facetValue of facetValues) {\r\n\t\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\t\tif (!valueValue) {\r\n\t\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tfacetSelections[facetField]!.push(valueValue);\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Entirely clears all the values of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t */\r\n\tfunction clearFacet(facet: Facet | string) {\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst facetSelections = store.pendingSearch.FacetSelections;\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set searchWithin to undefined to clear it\r\n\t\t\tsetSearchSelections(facetSelections, /* searchWithin */ undefined);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (!facetSelections || !facetSelections[facetField]) {\r\n\t\t\t// if there are no facet selections or the facet isn't selected at all, there's nothing to clear\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tdelete facetSelections[facetField];\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears a given facet value of the given facet from the current selection.\r\n\t * @param facet The facet to clear.\r\n\t * @param facetValue The facet value to clear.\r\n\t */\r\n\tfunction clearFacetValue(facet: Facet | string, facetValue: Value | string) {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// handle `searchWithin` facet, which isn't a facet selection but is instead a field on the\r\n\t\t// search request.\r\n\t\tif (facetField === 'searchWithin') {\r\n\t\t\t// set searchWithin to undefined to clear it\r\n\t\t\tsetSearchSelections(store.pendingSearch.FacetSelections, /* searchWithin */ undefined);\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst { state: selState, selectionIndex } = store.isFacetSelected(facet, facetValue);\r\n\r\n\t\tif (selState === FacetSelectionState.NotSelected) {\r\n\t\t\t// if there are no facet selections or the facet isn't selected at all, there's nothing to clear\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst facetSelections = store.pendingSearch.FacetSelections!;\r\n\r\n\t\t// remove it from the selections\r\n\t\tfacetSelections[facetField]!.splice(selectionIndex!, 1);\r\n\r\n\t\tif (facetSelections[facetField]!.length === 0) {\r\n\t\t\t// clean up any facets that no longer have any selected facet values\r\n\t\t\tdelete facetSelections[facetField];\r\n\t\t}\r\n\r\n\t\tsetSearchSelections(facetSelections, store.pendingSearch.SearchWithin);\r\n\t}\r\n\r\n\t/**\r\n\t * Clears all selected facets from the current selection.\r\n\t */\r\n\tfunction clearAllFacets(): void {\r\n\t\tsetSearchSelections(undefined, undefined);\r\n\t}\r\n\r\n\tconst actor: SearchActor = {\r\n\t\tsearch,\r\n\t\tsetSearch,\r\n\t\ttoggleFacetValue,\r\n\t\tsetFacetValues,\r\n\t\tclearFacet,\r\n\t\tclearFacetValue,\r\n\t\tclearAllFacets,\r\n\t\tpinItem,\r\n\t\tupdatePinOrder,\r\n\t};\r\n\r\n\treturn [store, actor];\r\n}\r\n","import { useState, Dispatch } from 'react';\r\n\r\ntype SetStateAction<T> = Partial<T> | ((prevState: T) => Partial<T>);\r\n\r\nexport function useMergableState<T>(\r\n\tinitialValue: T,\r\n\ttypeConstructor: new (init: Partial<T>) => T\r\n): [T, Dispatch<SetStateAction<T>>] {\r\n\tconst [state, setState] = useState(new typeConstructor(initialValue));\r\n\r\n\tfunction setStateAndMerge(value: SetStateAction<T>) {\r\n\t\tif (typeof value === 'function') {\r\n\t\t\t// if we're being passed a function, we're setting state in the form of setState(prevState => ...).\r\n\r\n\t\t\tsetState(prevState => {\r\n\t\t\t\t// so we derive the new state from the previous state\r\n\t\t\t\tconst newState = value(prevState);\r\n\r\n\t\t\t\t// and then set the new merged state\r\n\t\t\t\treturn new typeConstructor({ ...prevState, ...newState });\r\n\t\t\t});\r\n\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t// otherwise, the new state was simply passed in\r\n\t\tsetState(prevState => {\r\n\t\t\t// merge state together and set it\r\n\t\t\treturn new typeConstructor({ ...prevState, ...value });\r\n\t\t});\r\n\t}\r\n\r\n\treturn [state, setStateAndMerge];\r\n}\r\n","import React, { useContext } from 'react';\r\n\r\nimport { SearchStore } from 'store/Store';\r\nimport { useHawkState, SearchActor } from 'store/HawkState';\r\nimport { Request } from 'models/Search';\r\n\r\nconst HawkContext = React.createContext({} as HawkContextValue);\r\n\r\nexport interface HawkContextValue {\r\n\t/** The store of data used throughout the application. */\r\n\tstore: SearchStore;\r\n\t/**\r\n\t * An interface that allows actions to be performed on the store (such as executing searches,\r\n\t * changing pages, etc).\r\n\t */\r\n\tactor: SearchActor;\r\n}\r\n\r\nexport interface HawkStoreProviderProps {\r\n\t/** The initial search to perform when initializing the search components. */\r\n\tinitialSearch?: Partial<Request>;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\n/**\r\n * This component acts as the global store for the hawksearch application state. Only one instance of this component\r\n * should exist, and it should be the root level component.\r\n */\r\nfunction StoreProvider({ initialSearch, children }: HawkStoreProviderProps) {\r\n\tconst [store, actor] = useHawkState(initialSearch);\r\n\r\n\treturn <HawkContext.Provider value={{ store, actor }}>{children}</HawkContext.Provider>;\r\n}\r\n\r\n/**\r\n * Retrieves the global hawk store for use within a component.\r\n */\r\nexport function useHawkSearch() {\r\n\treturn useContext(HawkContext);\r\n}\r\n\r\nexport default StoreProvider;\r\n","import { ClientData } from 'models/Search';\r\n\r\nexport class Request {\r\n\t/**\r\n\t * API Client Guid. Usually comes from the \"Tracking Key\" in the \"Account Info\" section of the hawk dashboard.\r\n\t */\r\n\tpublic ClientGuid: string;\r\n\r\n\t/**\r\n\t * Search term entered by a user. If keyword is not included, all items configured to be returned will be\r\n\t * returned. When this parameter is populated, the results will be matched against this term by the search\r\n\t * engine.\r\n\t */\r\n\tpublic Keyword?: string;\r\n\r\n\t/**\r\n\t * This is used by the Hawksearch Preview to set to true will display elements in a preview mode.\r\n\t *\r\n\t * You can use this if you desire additional score information returned.\r\n\t */\r\n\tpublic IsInPreview?: boolean;\r\n\r\n\tpublic Type?: 'Category' | 'Product' | 'Content' | 'Popular';\r\n\r\n\t/** The maximum number of results to return for selected @see Type */\r\n\tpublic ProductCount?: number;\r\n\r\n\t/** Flag set to true will display also full Document object from Elastic for Products and Content suggestions. */\r\n\tpublic DisplayFullResponse?: boolean;\r\n\r\n\t/**\r\n\t * An array of field names that will be returned in the response. If provided, only the fields listed will\r\n\t * be returned. If no FieldOverride value is sent, the Workbench configuration will be used.\r\n\t *\r\n\t * If the Skip from Custom flag is turned “on” for a field, it will not be returned in the response, even if\r\n\t * set in the FieldOverride parameter.\r\n\t */\r\n\tpublic FieldOverride?: string[];\r\n\r\n\t/** Client data. */\r\n\tpublic ClientData?: ClientData;\r\n\r\n\tpublic IndexName?: string;\r\n}\r\n","import { Suggestion, SuggestionType, SuggestionStrategy } from './Suggestion';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nexport class Category extends Suggestion {\r\n\t/** Display name of category (example: Men &raquo; Jackets). */\r\n\tpublic Value: string;\r\n\t/**\r\n\t * URL for displaying contents of the category, ex:\r\n\t * http://dev.hawksearch.net/sites/elasticdemo?department_nest=Jackets_4\r\n\t */\r\n\tpublic Url: string;\r\n\r\n\tpublic constructor(init: Category) {\r\n\t\tsuper(SuggestionType.Category);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class CategoryStrategy implements SuggestionStrategy {\r\n\tpublic handleItemChange(item: Category, downshift: ControllerStateAndHelpers<Category>): void {\r\n\t\tlocation.assign(item.Url);\r\n\t}\r\n\r\n\tpublic toString(item: Category): string {\r\n\t\treturn this ? item.Value : '';\r\n\t}\r\n}\r\n","import { Result } from 'models/Search';\r\nimport { Suggestion, SuggestionStrategy, SuggestionType } from './Suggestion';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\nexport class Product extends Suggestion {\r\n\t/** Name of the item (if applicable). */\r\n\tpublic ProductName: string;\r\n\r\n\t/* Sku of the item (if applicable). */\r\n\tpublic Sku: string;\r\n\r\n\t/** URL of image of the item (if applicable). */\r\n\tpublic Thumb: string;\r\n\r\n\t/** URL of product page (if applicable). */\r\n\tpublic Url: string;\r\n\r\n\t/** HTML to display the item in autocomplete. */\r\n\tpublic Html: string;\r\n\r\n\t/**\r\n\t * This will only be populated if the request parameter @see Request.DisplayFullResponse is sent\r\n\t * as `true`.\r\n\t */\r\n\tpublic Results: Result;\r\n\r\n\tpublic constructor(init: Product) {\r\n\t\tsuper(SuggestionType.Product);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class ProductStrategy implements SuggestionStrategy {\r\n\tpublic handleItemChange(item: Product, downshift: ControllerStateAndHelpers<Product>): void {\r\n\t\tlocation.assign(item.Url);\r\n\t}\r\n\r\n\tpublic toString(item: Product): string {\r\n\t\treturn this ? item.ProductName : '';\r\n\t}\r\n}\r\n","import { Result } from 'models/Search';\r\nimport { SuggestionType, Suggestion, SuggestionStrategy } from './Suggestion';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nexport class Content extends Suggestion {\r\n\t/** Display label for the content item in Autocomplete. */\r\n\tpublic Value: string;\r\n\r\n\t/** The URL for the link created. */\r\n\tpublic Url: string;\r\n\r\n\t/** The display label in HTML format, if applicable. */\r\n\tpublic Html: string;\r\n\r\n\tpublic Results: Result;\r\n\r\n\tpublic constructor(init: Content) {\r\n\t\tsuper(SuggestionType.Content);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class ContentStrategy implements SuggestionStrategy {\r\n\tpublic handleItemChange(item: Content, downshift: ControllerStateAndHelpers<Content>): void {\r\n\t\tlocation.assign(item.Url);\r\n\t}\r\n\r\n\tpublic toString(item: Content): string {\r\n\t\treturn this ? item.Value : '';\r\n\t}\r\n}\r\n","import { SuggestionType, Suggestion, SuggestionStrategy } from './Suggestion';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nexport class Popular extends Suggestion {\r\n\t/** Display label for the popular search term. */\r\n\tpublic Value: string;\r\n\r\n\t/** The URL for the link created. */\r\n\tpublic Url: string;\r\n\r\n\tpublic constructor(init: Popular) {\r\n\t\tsuper(SuggestionType.Popular);\r\n\t\tObject.assign(this, init);\r\n\t}\r\n}\r\n\r\nexport class PopularStrategy implements SuggestionStrategy {\r\n\tpublic handleItemChange(item: Popular, downshift: ControllerStateAndHelpers<Popular>): void {\r\n\t\tlocation.assign(item.Url);\r\n\t}\r\n\r\n\tpublic toString(item: Popular): string {\r\n\t\treturn this ? item.Value : '';\r\n\t}\r\n}\r\n","import { Category } from './Category';\r\nimport { Product } from './Product';\r\nimport { Content } from './Content';\r\nimport { Popular } from './Popular';\r\n\r\nexport class Response {\r\n\t/** Number of products that would be in search results if search was executed. */\r\n\tpublic Count: number;\r\n\t/** Number of content items that would be in search results if search was executed.  */\r\n\tpublic ContentCount: number;\r\n\r\n\t/**\r\n\t * Pairs of display values and URLs for matching category names.  The number of categories returned\r\n\t * is configured in the Hawksearch Workbench unless overridden by the request parameters.\r\n\t */\r\n\tpublic Categories: Category[];\r\n\r\n\tpublic Products: Product[];\r\n\r\n\t/**\r\n\t * A set of objects for each content item returned. The number returned is configured in the\r\n\t * Hawksearch Workbench > Keyword Search > Auto-complete > Update Top Content.\r\n\t */\r\n\tpublic Content: Content[];\r\n\r\n\t/**\r\n\t * A set of Value and Url for each popular search term. The definition of Popular can be defined in\r\n\t * the Hawksearch Workbench > Keyword Search > Auto-complete > Update Popular Searches.\r\n\t */\r\n\tpublic Popular: Popular[];\r\n\r\n\t/** Search website URL to be used to complete links. */\r\n\tpublic SearchWebsiteUrl: string;\r\n\r\n\t/** The name of the parameter used to pass the keyword entered by user. */\r\n\tpublic KeywordField: string;\r\n\r\n\t/**\r\n\t * Will be included in the response if there are results to display. The `CategoryHeading` contains\r\n\t * the text to display above the list of categories to display in Autocomplete.\r\n\t */\r\n\tpublic CategoryHeading?: string;\r\n\r\n\t/**\r\n\t * Will be included in the response if there are results to display. The `ContentHeading` contains\r\n\t * the text to display above the list of content items to display in Autocomplete.\r\n\t */\r\n\tpublic ContentHeading?: string;\r\n\r\n\t/**\r\n\t * Will be included in the response if there are results to display. The `ProductHeading` contains\r\n\t * the text to display above the list of products to display in Autocomplete.\r\n\t */\r\n\tpublic ProductHeading?: string;\r\n\r\n\t/**\r\n\t * Will be included in the response if there are results to display. The `PopularHeading` contains\r\n\t * the text to display above the list of popular search terms to display in Autocomplete.\r\n\t */\r\n\tpublic PopularHeading?: string;\r\n\r\n\t/**\r\n\t * Will be included in the response if there are results to display. The `ViewAllButtonLabel` contains\r\n\t * the text to display for the link to return all results from searching with the term entered.\r\n\t */\r\n\tpublic ViewAllButtonLabel?: string;\r\n\r\n\tpublic constructor(init: Response) {\r\n\t\tObject.assign(this, init);\r\n\r\n\t\tthis.Categories = init.Categories.map(r => new Category(r));\r\n\t\tthis.Products = init.Products.map(r => new Product(r));\r\n\t\tthis.Popular = init.Popular.map(r => new Popular(r));\r\n\t\tthis.Content = init.Content.map(r => new Content(r));\r\n\t}\r\n}\r\n\r\nexport interface ResponseProps {\r\n\tCount: number;\r\n\tContentCount: number;\r\n\tCategories: Category[];\r\n\tProducts: Product[];\r\n\tContent: Content[];\r\n\tPopular: Popular[];\r\n\tSearchWebsiteUrl: string;\r\n\tKeywordField: string;\r\n\tCategoryHeading?: string;\r\n\tContentHeading?: string;\r\n\tProductHeading?: string;\r\n\tPopularHeading?: string;\r\n\tViewAllButtonLabel?: string;\r\n}\r\n","export * from './Request';\r\nexport * from './Response';\r\nexport * from './Category';\r\nexport * from './Product';\r\nexport * from './Content';\r\nexport * from './Popular';\r\nexport * from './Suggestion';\r\n","enum E_T {\r\n\tpageLoad = 1,\r\n\tsearch = 2,\r\n\tclick = 3,\r\n\taddToCart = 4,\r\n\trate = 5,\r\n\tsale = 6,\r\n\tbannerClick = 7,\r\n\tbannerImpression = 8,\r\n\trecommendationClick = 10,\r\n\tautoCompleteClick = 11,\r\n\tadd2CartMultiple = 14,\r\n}\r\n\r\nenum P_T {\r\n\titem = 1,\r\n\tlanding = 2,\r\n\tcart = 3,\r\n\torder = 4,\r\n\tcustom = 5,\r\n}\r\n\r\nexport enum SuggestType {\r\n\tPopularSearches = 1,\r\n\tTopCategories = 2,\r\n\tTopProductMatches = 3,\r\n\tTopContentMatches = 4,\r\n}\r\n\r\nexport enum SearchType {\r\n\tInitial = 1,\r\n\tRefinement = 2,\r\n}\r\n\r\nclass TrackingEvent {\r\n\tprivate static instance: TrackingEvent;\r\n\tprivate trackingURL: string;\r\n\tprivate clientGUID: string;\r\n\r\n\t/**\r\n\t * The Singleton's constructor should always be private to prevent direct\r\n\t * construction calls with the `new` operator.\r\n\t */\r\n\tprivate constructor() {}\r\n\r\n\t/**\r\n\t * The static method that controls the access to the singleton instance.\r\n\t *\r\n\t * This implementation let you subclass the Singleton class while keeping\r\n\t * just one instance of each subclass around.\r\n\t */\r\n\tpublic static getInstance(url?: string): TrackingEvent {\r\n\t\tif (!TrackingEvent.instance) {\r\n\t\t\tTrackingEvent.instance = new TrackingEvent();\r\n\t\t}\r\n\r\n\t\treturn TrackingEvent.instance;\r\n\t}\r\n\r\n\t/**\r\n\t * Finally, any singleton should define some business logic, which can be\r\n\t * executed on its instance.\r\n\t */\r\n\r\n\tpublic setTrackingURL(url: string) {\r\n\t\tthis.trackingURL = url;\r\n\t}\r\n\r\n\tpublic getTrackingURL() {\r\n\t\treturn this.trackingURL;\r\n\t}\r\n\r\n\tpublic setClientGUID(guid: string) {\r\n\t\tthis.clientGUID = guid;\r\n\t}\r\n\r\n\tpublic getClientGUID() {\r\n\t\treturn this.getClientGUID;\r\n\t}\r\n\r\n\tprivate getVisitorExpiry() {\r\n\t\tconst d = new Date();\r\n\t\t// 1 year\r\n\t\td.setTime(d.getTime() + 360 * 24 * 60 * 60 * 1000);\r\n\t\treturn d.toUTCString();\r\n\t}\r\n\r\n\tprivate getVisitExpiry() {\r\n\t\tconst d = new Date();\r\n\t\t// 4 hours\r\n\t\td.setTime(d.getTime() + 4 * 60 * 60 * 1000);\r\n\t\treturn d.toUTCString();\r\n\t}\r\n\r\n\tprivate createGuid() {\r\n\t\tconst s: any[] = [];\r\n\t\tconst hexDigits = '0123456789abcdef';\r\n\t\tfor (let i = 0; i < 36; i++) {\r\n\t\t\ts[i] = hexDigits.substr(Math.floor(Math.random() * 0x10), 1);\r\n\t\t}\r\n\t\ts[14] = '4'; // bits 12-15 of the time_hi_and_version field to 0010\r\n\t\t// tslint:disable-next-line: no-bitwise\r\n\t\ts[19] = hexDigits.substr((s[19] & 0x3) | 0x8, 1); // bits 6-7 of the clock_seq_hi_and_reserved to 01\r\n\t\ts[8] = s[13] = s[18] = s[23] = '-';\r\n\r\n\t\tconst uuid = s.join('');\r\n\t\treturn uuid;\r\n\t}\r\n\r\n\tprivate getCookie(name) {\r\n\t\tconst nameEQ = name + '=';\r\n\t\tconst ca = document.cookie.split(';');\r\n\t\t// tslint:disable-next-line: prefer-for-of\r\n\t\tfor (let i = 0; i < ca.length; i++) {\r\n\t\t\tlet c = ca[i];\r\n\t\t\twhile (c.charAt(0) === ' ') {\r\n\t\t\t\tc = c.substring(1, c.length);\r\n\t\t\t}\r\n\t\t\tif (c.indexOf(nameEQ) === 0) {\r\n\t\t\t\treturn c.substring(nameEQ.length, c.length);\r\n\t\t\t}\r\n\t\t}\r\n\t\treturn null;\r\n\t}\r\n\r\n\tprivate setCookie(name, value, expiry?) {\r\n\t\tlet expires;\r\n\t\tif (expiry) {\r\n\t\t\texpires = '; expires=' + expiry;\r\n\t\t} else {\r\n\t\t\texpires = '';\r\n\t\t}\r\n\t\tdocument.cookie = name + '=' + value + expires + '; path=/';\r\n\t}\r\n\r\n\tprivate writePageLoad(pageType) {\r\n\t\tconst c = document.documentElement;\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.pageLoad,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tPageTypeId: P_T[pageType],\r\n\t\t\t\t\tRequestPath: window.location.pathname,\r\n\t\t\t\t\tQs: window.location.search,\r\n\t\t\t\t\tViewportHeight: c.clientHeight,\r\n\t\t\t\t\tViewportWidth: c.clientWidth,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeSearchTracking(trackingId, typeId) {\r\n\t\tif (typeId === SearchType.Initial) {\r\n\t\t\tthis.setCookie('hawk_query_id', this.createGuid());\r\n\t\t}\r\n\t\tconst queryId = this.getCookie('hawk_query_id');\r\n\t\tconst c = document.documentElement;\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.search,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tQueryId: queryId,\r\n\t\t\t\t\tTrackingId: trackingId,\r\n\t\t\t\t\tTypeId: typeId,\r\n\t\t\t\t\tViewportHeight: c.clientHeight,\r\n\t\t\t\t\tViewportWidth: c.clientWidth,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeClick(event, uniqueId, trackingId, url) {\r\n\t\tconst c = document.documentElement;\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.click,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tUrl: url,\r\n\t\t\t\t\tQs: window.location.search,\r\n\t\t\t\t\tRequestPath: window.location.pathname,\r\n\t\t\t\t\tTrackingId: trackingId,\r\n\t\t\t\t\tUniqueId: uniqueId,\r\n\t\t\t\t\tViewportHeight: c.clientHeight,\r\n\t\t\t\t\tViewportWidth: c.clientWidth,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeBannerClick(bannerId, campaignId, trackingId) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.bannerClick,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tCampaignId: campaignId,\r\n\t\t\t\t\tBannerId: bannerId,\r\n\t\t\t\t\tTrackingId: trackingId,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeBannerImpression(bannerId, campaignId, trackingId) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.bannerImpression,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tCampaignId: campaignId,\r\n\t\t\t\t\tBannerId: bannerId,\r\n\t\t\t\t\tTrackingId: trackingId,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\tprivate writeSale(orderNo, itemList, total, subTotal, tax, currency) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.sale,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tOrderNo: orderNo,\r\n\t\t\t\t\tItemList: itemList,\r\n\t\t\t\t\tTotal: total,\r\n\t\t\t\t\tTax: tax,\r\n\t\t\t\t\tSubTotal: subTotal,\r\n\t\t\t\t\tCurrency: currency,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\tprivate writeAdd2Cart(uniqueId, price, quantity, currency) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.addToCart,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tUniqueId: uniqueId,\r\n\t\t\t\t\tQuantity: quantity,\r\n\t\t\t\t\tPrice: price,\r\n\t\t\t\t\tCurrency: currency,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeAdd2CartMultiple(args) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.add2CartMultiple,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tItemsList: args,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeRate(uniqueId, value) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.rate,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tUniqueId: uniqueId,\r\n\t\t\t\t\tValue: value,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeRecommendationClick(widgetGuid, uniqueId, itemIndex, requestId) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.recommendationClick,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tItemIndex: itemIndex,\r\n\t\t\t\t\tRequestId: requestId,\r\n\t\t\t\t\tUniqueId: uniqueId,\r\n\t\t\t\t\tWidgetGuid: widgetGuid,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate writeAutoCompleteClick(keyword, suggestType, name, url) {\r\n\t\tconst pl = {\r\n\t\t\tEventType: E_T.autoCompleteClick,\r\n\t\t\tEventData: btoa(\r\n\t\t\t\tJSON.stringify({\r\n\t\t\t\t\tKeyword: keyword,\r\n\t\t\t\t\tName: name,\r\n\t\t\t\t\tSuggestType: suggestType,\r\n\t\t\t\t\tUrl: url,\r\n\t\t\t\t})\r\n\t\t\t),\r\n\t\t};\r\n\t\tthis.mr(pl);\r\n\t}\r\n\r\n\tprivate mr(data) {\r\n\t\tlet visitId = this.getCookie('hawk_visit_id');\r\n\t\tlet visitorId = this.getCookie('hawk_visitor_id');\r\n\t\tif (!visitId) {\r\n\t\t\tthis.setCookie('hawk_visit_id', this.createGuid(), this.getVisitExpiry());\r\n\t\t\tvisitId = this.getCookie('hawk_visit_id');\r\n\t\t}\r\n\t\tif (!visitorId) {\r\n\t\t\tthis.setCookie('hawk_visitor_id', this.createGuid(), this.getVisitorExpiry());\r\n\t\t\tvisitorId = this.getCookie('hawk_visitor_id');\r\n\t\t}\r\n\t\tconst pl = Object.assign(\r\n\t\t\t{\r\n\t\t\t\tClientGuid: this.clientGUID,\r\n\t\t\t\tVisitId: visitId,\r\n\t\t\t\tVisitorId: visitorId,\r\n\t\t\t\t// TrackingProperties: hs.Context,\r\n\t\t\t\t// CustomDictionary: hs.Context.Custom,\r\n\t\t\t},\r\n\t\t\tdata\r\n\t\t);\r\n\t\tfetch(this.trackingURL, {\r\n\t\t\tmethod: 'POST',\r\n\t\t\theaders: { 'Content-Type': 'application/json' },\r\n\t\t\tbody: JSON.stringify(pl),\r\n\t\t})\r\n\t\t\t.then(resp => {\r\n\t\t\t\tconsole.log('Success:', resp.status);\r\n\t\t\t})\r\n\t\t\t.catch(error => {\r\n\t\t\t\tconsole.error('Error:', error);\r\n\t\t\t});\r\n\t}\r\n\r\n\tpublic track(eventName, args) {\r\n\t\tif (!this.trackingURL || !this.clientGUID) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tswitch (eventName.toLowerCase()) {\r\n\t\t\tcase 'pageload':\r\n\t\t\t\t// HawkSearch.Context.add(\"uniqueid\", \"123456789\");\r\n\t\t\t\treturn this.writePageLoad(args.pageType);\r\n\t\t\tcase 'searchtracking':\r\n\t\t\t\t// HawkSearch.Tracking.track(\"searchtracking\", {trackingId:\"a9bd6e50-e434-45b9-9f66-489eca07ad0a\", typeId: HawkSearch.Tracking.SearchType.Initial});\r\n\t\t\t\t// HawkSearch.Tracking.track(\"searchtracking\", {trackingId:\"a9bd6e50-e434-45b9-9f66-489eca07ad0a\", typeId: HawkSearch.Tracking.SearchType.Refinement});\r\n\t\t\t\treturn this.writeSearchTracking(args.trackingId, args.typeId); // CHANGED\r\n\t\t\tcase 'click':\r\n\t\t\t\t// HawkSearch.Tracking.track('click',{event: e, uniqueId: \"33333\", trackingId: \"75a0801a-a93c-4bcb-81f1-f4b011f616e3\"});\r\n\t\t\t\treturn this.writeClick(args.event, args.uniqueId, args.trackingId, ''); // CHANGED\r\n\t\t\tcase 'bannerclick':\r\n\t\t\t\t// HawkSearch.Tracking.track('bannerclick',{bannerId: 1, campaignId: 2, trackingId:\"2d652a1e-2e05-4414-9d76-51979109f724\"});\r\n\t\t\t\treturn this.writeBannerClick(args.bannerId, args.campaignId, args.trackingId); // CHANGED\r\n\t\t\tcase 'bannerimpression':\r\n\t\t\t\t// HawkSearch.Tracking.track('bannerimpression',{bannerId: \"2\", campaignId: \"2\", trackingId:\"2d652a1e-2e05-4414-9d76-51979109f724\"});\r\n\t\t\t\treturn this.writeBannerImpression(args.bannerId, args.campaignId, args.trackingId); // CHANGED\r\n\t\t\tcase 'sale':\r\n\t\t\t\t// HawkSearch.Tracking.track('sale', {orderNo: 'order_123',itemList: [{uniqueid: '123456789', itemPrice: 12.99, quantity: 2}], total: 25.98, subTotal: 22, tax: 3.98, currency: 'USD'});\r\n\t\t\t\treturn this.writeSale(args.orderNo, args.itemList, args.total, args.subTotal, args.tax, args.currency);\r\n\t\t\tcase 'add2cart':\r\n\t\t\t\t// HawkSearch.Tracking.track('add2cart',{uniqueId: '123456789', price: 19.99, quantity: 3, currency: 'USD'});\r\n\t\t\t\treturn this.writeAdd2Cart(args.uniqueId, args.price, args.quantity, args.currency);\r\n\t\t\tcase 'add2cartmultiple':\r\n\t\t\t\t// HawkSearch.Tracking.track('add2cartmultiple', [{uniqueId: '123456789',price: 15.97,quantity: 1,currency: 'USD'},{uniqueId: '987465321', price: 18.00, quantity: 1, currency: 'USD'}]);\r\n\t\t\t\treturn this.writeAdd2CartMultiple(args);\r\n\t\t\tcase 'rate':\r\n\t\t\t\t// HawkSearch.Tracking.track('rate', {uniqueId: '123456789',value: 3.00});\r\n\t\t\t\treturn this.writeRate(args.uniqueId, args.value);\r\n\t\t\tcase 'recommendationclick':\r\n\t\t\t\t// HawkSearch.Tracking.track('recommendationclick',{uniqueId: \"223222\", itemIndex: \"222\", widgetGuid:\"2d652a1e-2e05-4414-9d76-51979109f724\", requestId:\"2d652a1e-2e05-4414-9d76-51979109f724\"});\r\n\t\t\t\treturn this.writeRecommendationClick(args.widgetGuid, args.uniqueId, args.itemIndex, args.requestId);\r\n\t\t\tcase 'autocompleteclick':\r\n\t\t\t\t// HawkSearch.Tracking.track('autocompleteclick',{keyword: \"test\", suggestType: HawkSearch.Tracking.SuggestType.PopularSearches, name:\"tester\", url:\"/test\"});\r\n\t\t\t\treturn this.writeAutoCompleteClick(args.keyword, args.suggestType, args.name, args.url); // CHANGED\r\n\t\t}\r\n\t}\r\n}\r\n\r\n// export TrackingEvent.getInstance();\r\nexport default TrackingEvent.getInstance();\r\n","import { Response, Request } from 'models/Search';\r\nimport { Value, Facet } from 'models/Facets';\r\nimport { ClientSelections, ClientSelectionValue } from 'store/ClientSelections';\r\n\r\nexport enum FacetSelectionState {\r\n\t/** The facet value is not selected. */\r\n\tNotSelected,\r\n\t/** The facet value is selected. */\r\n\tSelected,\r\n\t/** The facet value is selected, but negated. */\r\n\tNegated,\r\n}\r\n\r\nexport interface SelectionInfo {\r\n\t/** The facet value selection state. */\r\n\tstate: FacetSelectionState;\r\n\r\n\t/**\r\n\t * If the facet value is `FacetSelectionState.Selected` or `FacetSelectionState.Negated`, this is the value of\r\n\t * the facet value. For negated facet values this will be prefixed with the negation character `'-'`.\r\n\t */\r\n\tselectedValue?: string;\r\n\t/**\r\n\t * If the facet value is `FacetSelectionState.Selected` or `FacetSelectionState.Negated`, this is the index\r\n\t * into the `pendingSearch.FacetSelections[facetName]` array for this facet value.\r\n\t */\r\n\tselectionIndex?: number;\r\n}\r\n\r\nexport class SearchStore {\r\n\t/** This represents the next search request that will be executed. */\r\n\tpublic pendingSearch: Partial<Request>;\r\n\t/**\r\n\t * Whether or not the next search request will perform history actions (pushing the search into browser\r\n\t * history).\r\n\t */\r\n\tpublic doHistory: boolean;\r\n\r\n\t/** Whether or not a search request is waiting for completion. */\r\n\tpublic isLoading: boolean;\r\n\r\n\t/** The results of the last search request, if one has been performed. Otherwise, `undefined`. */\r\n\tpublic searchResults?: Response;\r\n\r\n\tpublic requestError: boolean;\r\n\r\n\tpublic constructor(initial?: Partial<SearchStore>) {\r\n\t\tObject.assign(this, initial);\r\n\t}\r\n\r\n\t/**\r\n\t * Returns whether or not this is the initial load of the search results.\r\n\t */\r\n\tpublic get isInitialLoad() {\r\n\t\treturn this.isLoading && !this.searchResults;\r\n\t}\r\n\r\n\t/**\r\n\t * Determines whether or not the given facet and facet value is selected, and returns info regarding the selection.\r\n\t * @param facet The facet for which the facet value will be checked for selection.\r\n\t * @param facetValue The facet value that will be checked for selection.\r\n\t */\r\n\tpublic isFacetSelected(facet: Facet | string, facetValue: Value | string): SelectionInfo {\r\n\t\tconst facetName = typeof facet === 'string' ? facet : facet.Name;\r\n\t\tconst facetField = typeof facet === 'string' ? facet : facet.selectionField;\r\n\r\n\t\tconst valueValue = typeof facetValue === 'string' ? facetValue : facetValue.Value;\r\n\t\tconst valueLabel = typeof facetValue === 'string' ? facetValue : facetValue.Label;\r\n\r\n\t\tif (!valueValue) {\r\n\t\t\tconsole.error(`Facet ${facetName} (${facetField}) has no facet value for ${valueLabel}`);\r\n\t\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t\t}\r\n\r\n\t\tconst facetSelections = this.pendingSearch.FacetSelections;\r\n\r\n\t\tif (!facetSelections || !facetSelections[facetField]) {\r\n\t\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t\t}\r\n\r\n\t\tconst selectionIdx = facetSelections[facetField]!.indexOf(valueValue);\r\n\t\tconst negationIdx = facetSelections[facetField]!.indexOf(`-${valueValue}`);\r\n\r\n\t\tif (selectionIdx !== -1) {\r\n\t\t\t// if the exact facet value exists, then we're normally selected\r\n\t\t\treturn {\r\n\t\t\t\tstate: FacetSelectionState.Selected,\r\n\t\t\t\tselectedValue: valueValue,\r\n\t\t\t\tselectionIndex: selectionIdx,\r\n\t\t\t};\r\n\t\t} else if (negationIdx !== -1) {\r\n\t\t\t// if the facet value is selected but prefixed with a -, then we're negated\r\n\t\t\treturn {\r\n\t\t\t\tstate: FacetSelectionState.Negated,\r\n\t\t\t\tselectedValue: `-${valueValue}`,\r\n\t\t\t\tselectionIndex: negationIdx,\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\treturn { state: FacetSelectionState.NotSelected };\r\n\t}\r\n\r\n\t/**\r\n\t * Returns an object containing the selections that have been made in both the next search request and also\r\n\t * in the previous search request. This should be used when iterating selections instead of pulling the values\r\n\t * out from the search result or pending search - as this will merge the values together and provide an accurate\r\n\t * view of all facet selections.\r\n\t */\r\n\tpublic get facetSelections(): ClientSelections {\r\n\t\tconst {\r\n\t\t\tpendingSearch: { FacetSelections: clientSelections, SearchWithin },\r\n\t\t\tsearchResults,\r\n\t\t} = this;\r\n\t\tconst selections: ClientSelections = {};\r\n\r\n\t\tif (!clientSelections && !SearchWithin) {\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\t// if we've made selections on the client, transform these into more detailed selections.\r\n\t\t// the client-side selections are just facet fields and values without any labels - so we\r\n\t\t// need to combine this information with the list of facets received from the server in the\r\n\t\t// previous search in order to return a rich list of selections\r\n\r\n\t\tconst facets = searchResults ? searchResults.Facets : null;\r\n\r\n\t\tif (!facets) {\r\n\t\t\t// but we can only do this if we've received facet information from the server. without this\r\n\t\t\t// info we can't determine what labels should be used\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\t// manually handle the `searchWithin` selection, as this doesn't usually behave like a normal facet selection\r\n\t\t// but instead a field on the search request\r\n\t\tif (SearchWithin) {\r\n\t\t\tconst facet = facets.find(f => f.selectionField === 'searchWithin');\r\n\r\n\t\t\tif (facet) {\r\n\t\t\t\tselections.searchWithin = {\r\n\t\t\t\t\tfacet,\r\n\t\t\t\t\tlabel: facet.Name,\r\n\t\t\t\t\titems: [\r\n\t\t\t\t\t\t{\r\n\t\t\t\t\t\t\tlabel: SearchWithin,\r\n\t\t\t\t\t\t\tvalue: SearchWithin,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t],\r\n\t\t\t\t};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (!clientSelections) {\r\n\t\t\treturn selections;\r\n\t\t}\r\n\r\n\t\tObject.keys(clientSelections).forEach(fieldName => {\r\n\t\t\tconst selectionValues = clientSelections[fieldName];\r\n\r\n\t\t\tif (!selectionValues) {\r\n\t\t\t\t// if this selection has no values, it's not really selected\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst facet = facets.find(f => f.selectionField === fieldName);\r\n\r\n\t\t\tif (!facet) {\r\n\t\t\t\t// if there's no matching facet from the server, we can't show this since we'll have no labels\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconst items: ClientSelectionValue[] = [];\r\n\r\n\t\t\tif (facet.FieldType === 'range') {\r\n\t\t\t\t// if the facet this selection is for is a range, there won't be a matching value and thus there won't be a label.\r\n\t\t\t\t// so because of this we'll just use the selection value as the label\r\n\r\n\t\t\t\tselectionValues.forEach(selectionValue => {\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tlabel: selectionValue,\r\n\t\t\t\t\t\tvalue: selectionValue,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t} else if (facet.FieldType === 'tab') {\r\n\t\t\t\t// do not return the selection value for tab facet\r\n\t\t\t\treturn;\r\n\t\t\t} else {\r\n\t\t\t\t// for other types of facets, try to find a matching value\r\n\r\n\t\t\t\tselectionValues.forEach(selectionValue => {\r\n\t\t\t\t\tconst matchingVal = this.findMatchingValue(selectionValue, facet.Values);\r\n\r\n\t\t\t\t\tif (!matchingVal || !matchingVal.Label) {\r\n\t\t\t\t\t\t// if there's no matching value from the server, we cannot display because there would\r\n\t\t\t\t\t\t// be no label - same if there's no label at all\r\n\t\t\t\t\t\treturn;\r\n\t\t\t\t\t}\r\n\r\n\t\t\t\t\titems.push({\r\n\t\t\t\t\t\tlabel: matchingVal.Label,\r\n\t\t\t\t\t\tvalue: selectionValue,\r\n\t\t\t\t\t});\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tselections[fieldName] = {\r\n\t\t\t\tfacet,\r\n\t\t\t\tlabel: facet.Name,\r\n\t\t\t\titems,\r\n\t\t\t};\r\n\t\t});\r\n\r\n\t\treturn selections;\r\n\t}\r\n\r\n\tprivate findMatchingValue(selectionValue: string, facetValues: Value[]): Value | null {\r\n\t\tlet matchingValue: Value | null = null;\r\n\t\tif (!facetValues || facetValues.length === 0) {\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfor (const facetValue of facetValues) {\r\n\t\t\tconst isMatchingVal = facetValue.Value === selectionValue || `-${facetValue.Value}` === selectionValue;\r\n\t\t\t// loop through children\r\n\t\t\tif (!isMatchingVal) {\r\n\t\t\t\tmatchingValue = this.findMatchingValue(selectionValue, facetValue.Children);\r\n\t\t\t} else {\r\n\t\t\t\tmatchingValue = facetValue;\r\n\t\t\t}\r\n\r\n\t\t\tif (matchingValue) {\r\n\t\t\t\treturn matchingValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn matchingValue;\r\n\t}\r\n}\r\n","class AuthToken {\r\n\tprivate static instance: AuthToken;\r\n\tprivate refreshToken: string;\r\n\tprivate accessToken: string;\r\n\r\n\t/**\r\n\t * The Singleton's constructor should always be private to prevent direct\r\n\t * construction calls with the `new` operator.\r\n\t */\r\n\tprivate constructor() {}\r\n\r\n\t/**\r\n\t * The static method that controls the access to the singleton instance.\r\n\t *\r\n\t * This implementation let you subclass the Singleton class while keeping\r\n\t * just one instance of each subclass around.\r\n\t */\r\n\tpublic static getInstance(url?: string): AuthToken {\r\n\t\tif (!AuthToken.instance) {\r\n\t\t\tAuthToken.instance = new AuthToken();\r\n\t\t}\r\n\r\n\t\treturn AuthToken.instance;\r\n\t}\r\n\r\n\tpublic setTokens(accessToken: string, refreshToken: string) {\r\n\t\tthis.refreshToken = refreshToken;\r\n\t\tthis.accessToken = accessToken;\r\n\t}\r\n\r\n\tpublic getTokens() {\r\n\t\treturn {\r\n\t\t\trefreshToken: this.refreshToken,\r\n\t\t\taccessToken: this.accessToken,\r\n\t\t};\r\n\t}\r\n}\r\n\r\nexport default AuthToken.getInstance();\r\n","import axios, { CancelToken, AxiosRequestConfig, AxiosInstance } from 'axios';\r\nimport { Request as SearchRequest, Response as SearchResponse } from 'models/Search';\r\nimport { Request as AutocompleteRequest, Response as AutocompleteResponse } from 'models/Autocomplete';\r\nimport { Request as PinItemRequest } from 'models/PinItems';\r\nimport { Request as SortingOrderRequest } from 'models/PinItemsOrder';\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\nimport AuthToken from 'components/AuthToken';\r\n\r\nclass HawkClient {\r\n\tprivate baseUrl: string;\r\n\tprivate searchUrl: string;\r\n\tprivate dashboardUrl: string;\r\n\tprivate autocompleteUrl: string;\r\n\tprivate compareItemsURL: string;\r\n\tprivate refreshTokenURL: string;\r\n\tprivate pinItemURL: string;\r\n\tprivate updatePinOrderURL: string;\r\n\tprivate axiosInstance: AxiosInstance = axios.create();\r\n\r\n\tconstructor(config: HawkSearchConfig) {\r\n\t\tthis.baseUrl = config.apiUrl || 'https://searchapi-dev.hawksearch.net';\r\n\t\tthis.dashboardUrl = config.dashboardUrl || 'http://test.hawksearch.net/';\r\n\t\tthis.searchUrl = config.searchUrl || '/api/v2/search';\r\n\t\tthis.autocompleteUrl = config.autocompleteUrl || '/api/autocomplete';\r\n\t\tthis.refreshTokenURL = config.refreshTokenURL || '/api/internal-preview/refresh-token/';\r\n\t\tthis.pinItemURL = config.pinItemURL || '/api/pinning/set-pinning/';\r\n\t\tthis.updatePinOrderURL = config.updatePinOrderURL || '/api/pinning/update-pin-order/';\r\n\t\tthis.axiosInstance.interceptors.request.use(\r\n\t\t\tconf => {\r\n\t\t\t\tconst accessToken = AuthToken.getTokens().accessToken;\r\n\t\t\t\tif ((conf.url || '').indexOf('refresh-token') !== -1 || !accessToken) {\r\n\t\t\t\t\tdelete conf.headers.common.Authorization;\r\n\t\t\t\t\tdelete conf.headers.common.ClientGuid;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tconf.headers.Authorization = `Bearer ${accessToken}`;\r\n\t\t\t\t\tconf.headers.ClientGuid = config.clientGuid;\r\n\t\t\t\t}\r\n\t\t\t\treturn conf;\r\n\t\t\t},\r\n\t\t\terror => {\r\n\t\t\t\tPromise.reject(error);\r\n\t\t\t}\r\n\t\t);\r\n\t\tthis.axiosInstance.interceptors.response.use(\r\n\t\t\tresponse => response,\r\n\t\t\terror => {\r\n\t\t\t\tconst originalRequest = error.config;\r\n\r\n\t\t\t\tif (error.response.status === 401 && !originalRequest._retry) {\r\n\t\t\t\t\toriginalRequest._retry = true;\r\n\t\t\t\t\tconst token = AuthToken.getTokens();\r\n\t\t\t\t\treturn this.axiosInstance\r\n\t\t\t\t\t\t.post(new URL(this.refreshTokenURL, this.baseUrl).href, {\r\n\t\t\t\t\t\t\tClientGuid: config.clientGuid,\r\n\t\t\t\t\t\t\tToken: token.accessToken,\r\n\t\t\t\t\t\t\tRefreshToken: token.refreshToken,\r\n\t\t\t\t\t\t})\r\n\t\t\t\t\t\t.then(res => {\r\n\t\t\t\t\t\t\tif (res.status === 200) {\r\n\t\t\t\t\t\t\t\tAuthToken.setTokens(res.data.Token, res.data.RefreshToken);\r\n\t\t\t\t\t\t\t\tthis.axiosInstance.defaults.headers.common.Authorization = 'Bearer ' + res.data.Token;\r\n\t\t\t\t\t\t\t\treturn this.axiosInstance(originalRequest);\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t});\r\n\t\t\t\t}\r\n\t\t\t\treturn Promise.reject(error);\r\n\t\t\t}\r\n\t\t);\r\n\t}\r\n\r\n\tpublic async pinItem(request: PinItemRequest, cancellationToken?: CancelToken): Promise<any> {\r\n\t\tconst result = await this.axiosInstance.post<any>(new URL(this.pinItemURL, this.baseUrl).href, request, {\r\n\t\t\tcancelToken: cancellationToken,\r\n\t\t});\r\n\t\treturn result.data;\r\n\t}\r\n\r\n\tpublic async updatePinOrder(request: SortingOrderRequest, cancellationToken?: CancelToken): Promise<any> {\r\n\t\tconst result = await this.axiosInstance.post<any>(new URL(this.updatePinOrderURL, this.baseUrl).href, request, {\r\n\t\t\tcancelToken: cancellationToken,\r\n\t\t});\r\n\t\treturn result.data;\r\n\t}\r\n\r\n\tpublic async search(request: SearchRequest, cancellationToken?: CancelToken): Promise<SearchResponse> {\r\n\t\tconst result = await this.axiosInstance.post<SearchResponse>(\r\n\t\t\tnew URL(this.searchUrl, this.baseUrl).href,\r\n\t\t\trequest,\r\n\t\t\t{\r\n\t\t\t\tcancelToken: cancellationToken,\r\n\t\t\t}\r\n\t\t);\r\n\t\treturn result.data;\r\n\t}\r\n\r\n\tpublic async autocomplete(\r\n\t\trequest: AutocompleteRequest,\r\n\t\tcancellationToken?: CancelToken\r\n\t): Promise<AutocompleteResponse> {\r\n\t\tconst result = await axios.post<AutocompleteResponse>(\r\n\t\t\tnew URL(this.autocompleteUrl, this.baseUrl).href,\r\n\t\t\trequest,\r\n\t\t\t{\r\n\t\t\t\tcancelToken: cancellationToken,\r\n\t\t\t}\r\n\t\t);\r\n\r\n\t\treturn result.data;\r\n\t}\r\n}\r\n\r\nexport default HawkClient;\r\n","import React from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport { Product } from 'models/Autocomplete';\r\nimport SearchBoxBase from 'components/ui/SearchBox/SearchBoxBase';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\n\r\n/**\r\n * This component is a simple search input box (with autosuggest) that can be placed globally throughout the site.\r\n * This search box is intended to be used on non-search pages. On search pages, the `SearchBox` component should be\r\n * used instead.\r\n */\r\nfunction GlobalSearchBox() {\r\n\tconst { config } = useHawkConfig();\r\n\tconst { actor } = useHawkSearch();\r\n\r\n\tconst searchUrl = config.searchPageUrl;\r\n\r\n\tfunction handleSubmit(event: React.KeyboardEvent<HTMLInputElement>, downshift: ControllerStateAndHelpers<Product>) {\r\n\t\tconst { inputValue } = downshift;\r\n\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tlet redirect = `${searchUrl}?keyword=${inputValue}`;\r\n\r\n\t\t\tif (config.indexName) {\r\n\t\t\t\tredirect += '&indexName=' + config.indexName;\r\n\t\t\t}\r\n\r\n\t\t\tlocation.assign(redirect);\r\n\t\t}\r\n\t}\r\n\r\n\t// On select view all matches from suggestions list\r\n\tfunction handleViewAllMatches(downshift: ControllerStateAndHelpers<Product>) {\r\n\t\tconst { inputValue, closeMenu } = downshift;\r\n\t\tactor.setSearch({\r\n\t\t\tPageId: undefined,\r\n\t\t\tCustomUrl: undefined,\r\n\t\t\tKeyword: inputValue || '',\r\n\t\t});\r\n\t\tcloseMenu();\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk hawk__searchBox\">\r\n\t\t\t<SearchBoxBase onSubmit={handleSubmit} onViewMatches={handleViewAllMatches} />\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default GlobalSearchBox;\r\n","//\r\n// this file is the entry point for the searchbox application when running the minified bundle\r\n//\r\n\r\nimport '@babel/polyfill';\r\nimport 'url-search-params-polyfill';\r\n\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\nimport ConfigProvider from 'components/ConfigProvider';\r\nimport GlobalSearchBox from 'components/ui/SearchBox/GlobalSearchBox';\r\n\r\ndeclare global {\r\n\tinterface Window {\r\n\t\tHawkSearch?: HawkSearchConfig;\r\n\t}\r\n}\r\n\r\nif (window.HawkSearch) {\r\n\tinitializeSearchBox(window.HawkSearch);\r\n}\r\n\r\nexport function initializeSearchBox(config: HawkSearchConfig) {\r\n\tif (!config.searchBoxElement) {\r\n\t\tthrow new Error('window.HawkSearch.searchBoxElement has not been configured');\r\n\t}\r\n\r\n\tconst renderElem =\r\n\t\ttypeof config.searchBoxElement === 'string'\r\n\t\t\t? document.getElementById(config.searchBoxElement)\r\n\t\t\t: config.searchBoxElement;\r\n\r\n\tReactDOM.render(\r\n\t\t<ConfigProvider config={config}>\r\n\t\t\t<GlobalSearchBox />\r\n\t\t</ConfigProvider>,\r\n\t\trenderElem\r\n\t);\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface PlusSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Plus SVG\r\n *\r\n * @returns\r\n */\r\nfunction PlusSVG(props: PlusSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M31 12h-11v-11c0-0.552-0.448-1-1-1h-6c-0.552 0-1 0.448-1 1v11h-11c-0.552 0-1 0.448-1 1v6c0 0.552 0.448 1 1 1h11v11c0 0.552 0.448 1 1 1h6c0.552 0 1-0.448 1-1v-11h11c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default PlusSVG;\r\n","import * as React from 'react';\r\n\r\ninterface MinusSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Minus SVG\r\n *\r\n * @returns\r\n */\r\nfunction MinusSVG(props: MinusSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M0 13v6c0 0.552 0.448 1 1 1h30c0.552 0 1-0.448 1-1v-6c0-0.552-0.448-1-1-1h-30c-0.552 0-1 0.448-1 1z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default MinusSVG;\r\n","import * as React from 'react';\r\n\r\ninterface QuestionmarkSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Questionmark SVG\r\n *\r\n * @returns\r\n */\r\nfunction QuestionmarkSVG(props: QuestionmarkSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M 10.976562 14.785156 C 10.976562 15.324219 10.539062 15.761719 10 15.761719 C 9.460938 15.761719 9.023438 15.324219 9.023438 14.785156 C 9.023438 14.246094 9.460938 13.808594 10 13.808594 C 10.539062 13.808594 10.976562 14.246094 10.976562 14.785156 Z M 10.976562 14.785156 \" />\r\n\t\t\t<path d=\"M 10 0 C 4.472656 0 0 4.472656 0 10 C 0 15.527344 4.472656 20 10 20 C 15.527344 20 20 15.527344 20 10 C 20 4.472656 15.527344 0 10 0 Z M 10 18.4375 C 5.335938 18.4375 1.5625 14.664062 1.5625 10 C 1.5625 5.335938 5.335938 1.5625 10 1.5625 C 14.664062 1.5625 18.4375 5.335938 18.4375 10 C 18.4375 14.664062 14.664062 18.4375 10 18.4375 Z M 10 18.4375 \" />\r\n\t\t\t<path d=\"M 10 5.019531 C 8.277344 5.019531 6.875 6.421875 6.875 8.144531 C 6.875 8.574219 7.226562 8.925781 7.65625 8.925781 C 8.085938 8.925781 8.4375 8.574219 8.4375 8.144531 C 8.4375 7.28125 9.136719 6.582031 10 6.582031 C 10.863281 6.582031 11.5625 7.28125 11.5625 8.144531 C 11.5625 9.007812 10.863281 9.707031 10 9.707031 C 9.570312 9.707031 9.21875 10.058594 9.21875 10.488281 L 9.21875 12.441406 C 9.21875 12.871094 9.570312 13.222656 10 13.222656 C 10.429688 13.222656 10.78125 12.871094 10.78125 12.441406 L 10.78125 11.171875 C 12.128906 10.824219 13.125 9.597656 13.125 8.144531 C 13.125 6.421875 11.722656 5.019531 10 5.019531 Z M 10 5.019531 \" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default QuestionmarkSVG;\r\n","import React, { useContext, useState, useRef, MouseEvent } from 'react';\r\n\r\nimport { Facet as FacetModel, Value } from 'models/Facets';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport PlusSVG from 'components/svg/PlusSVG';\r\nimport MinusSVG from 'components/svg/MinusSVG';\r\nimport QuestionmarkSVG from 'components/svg/QuestionmarkSVG';\r\n\r\nconst FacetContext = React.createContext({} as FacetContextValue);\r\n\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nexport interface FacetProps {\r\n\tfacet: FacetModel;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\ninterface FacetContextValue {\r\n\t/** The facet model returned from the server for this facet. */\r\n\tfacet: FacetModel;\r\n\r\n\t/** Returns the state of the parent facet container. */\r\n\tstate: FacetState;\r\n\r\n\t/** An actor interface to perform actions for this facet. */\r\n\tactor: FacetActor;\r\n\r\n\trenderer: FacetRenderer;\r\n}\r\n\r\nexport interface FacetState {\r\n\t/**\r\n\t * An array of facet values for this facet. If this facet has a quick lookup search bar, this list\r\n\t * will be filtered by this quick lookup.\r\n\t */\r\n\tfacetValues: Value[];\r\n\r\n\t/**\r\n\t * If the facet is configured for filtering, this is the user's entered filter value. Updated on\r\n\t * immediately when the user types.\r\n\t */\r\n\tfilter: string;\r\n\r\n\t/** Whether or not this facet has its values truncated. */\r\n\tisTruncated: boolean;\r\n\t/** Whether or not this facet is collapsed. */\r\n\tisCollapsed: boolean;\r\n\t/** If filter is enabled, contains the number of facets that are truncated. */\r\n\tremainingFacets: number;\r\n\r\n\t// It shows the decimal count in slider\r\n\tdecimalPrecision: number;\r\n}\r\n\r\nexport interface FacetActor {\r\n\t/** Select the given facet value. */\r\n\tselectFacet(facetValue: Value | string): void;\r\n\t/** Selects and negates the given facet value. */\r\n\tnegateFacet(facetValue: Value | string): void;\r\n\r\n\t/** Sets the selected facet values by replacing existing selections for this facet.  */\r\n\tsetFacets(facetValues: Value[] | string[]): void;\r\n\r\n\t/** Sets the filter for this facet container. */\r\n\tsetFilter(filter: string): void;\r\n\r\n\t/** Sets whether or not this facet is currently being truncated. */\r\n\tsetTruncated(truncated: boolean): void;\r\n\t/** Sets whether or not this facet is currently collapsed. */\r\n\tsetCollapsed(collapsed: boolean): void;\r\n}\r\n\r\nexport interface FacetRenderer {\r\n\t/**\r\n\t * Conditionally renders the default truncation UI (the \"Show More\"/\"Show Less\" buttons). Nothing will render\r\n\t * if the facet is configured to not be truncated.\r\n\t */\r\n\trenderTruncation();\r\n}\r\n\r\nfunction Facet({ facet, children }: FacetProps) {\r\n\tconst { actor: searchActor } = useHawkSearch();\r\n\tconst wrapperRef = useRef<HTMLInputElement>(null);\r\n\tconst [filter, setFilter] = useState('');\r\n\tconst [isTruncated, setTruncated] = useState(facet.shouldTruncate);\r\n\tconst [isCollapsed, setCollapsed] = useState(facet.IsCollapsible && facet.IsCollapsedDefault);\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tfunction selectFacet(facetValue: Value | string): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.toggleFacetValue(facet, facetValue);\r\n\t}\r\n\r\n\tfunction setFacets(values: Value[] | string[]): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.setFacetValues(facet, values);\r\n\t}\r\n\r\n\tfunction negateFacet(facetValue: Value | string): void {\r\n\t\tsetFilter('');\r\n\t\tsearchActor.toggleFacetValue(facet, facetValue, /* negate */ true);\r\n\t}\r\n\r\n\tfunction renderTruncation() {\r\n\t\t// only show the toggle button if the facet is configured for truncation and we're not filtering\r\n\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{facet.shouldTruncate && !filter && (\r\n\t\t\t\t\t<button onClick={() => actor.setTruncated(!isTruncated)} className=\"hawk-facet-rail__show-more-btn\">\r\n\t\t\t\t\t\t{isTruncated ? `(+) Show ${remainingFacets} More` : '(-) Show Less'}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\t// TODO: sort facet values\r\n\tlet facetValues = facet.Values;\r\n\r\n\t// first, perform any filtering if enabled and a filter has been typed in\r\n\tif (facet.shouldSearch && filter) {\r\n\t\tfacetValues = facet.Values.filter(val => {\r\n\t\t\tif (!val.Label) {\r\n\t\t\t\t// if a facet value doesn't have a label, we can't really filter down to it\r\n\t\t\t\t// so exclude it\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\r\n\t\t\treturn val.Label.toLowerCase().indexOf(filter.toLowerCase()) !== -1;\r\n\t\t});\r\n\t}\r\n\r\n\t// next, handle truncation\r\n\tlet remainingFacets = 0;\r\n\r\n\tif (facet.shouldTruncate && isTruncated) {\r\n\t\tconst valuesBeforeTrunc = facetValues.length;\r\n\r\n\t\tfacetValues = facetValues.slice(0, facet.TruncateThreshold);\r\n\r\n\t\tremainingFacets = valuesBeforeTrunc - facet.TruncateThreshold;\r\n\t}\r\n\r\n\tconst actor: FacetActor = {\r\n\t\tselectFacet,\r\n\t\tnegateFacet,\r\n\r\n\t\tsetFacets,\r\n\r\n\t\tsetFilter,\r\n\r\n\t\tsetTruncated,\r\n\t\tsetCollapsed,\r\n\t};\r\n\r\n\tconst state: FacetState = {\r\n\t\tfacetValues,\r\n\r\n\t\tfilter,\r\n\r\n\t\tisTruncated,\r\n\t\tisCollapsed,\r\n\t\tremainingFacets,\r\n\t\tdecimalPrecision: 2,\r\n\t};\r\n\r\n\tconst renderer: FacetRenderer = {\r\n\t\trenderTruncation,\r\n\t};\r\n\r\n\tfunction toggleCollapsible(event: MouseEvent) {\r\n\t\tif (wrapperRef.current && wrapperRef.current.contains(event.target as Node)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetCollapsed(!isCollapsed);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<FacetContext.Provider value={{ facet, state, actor, renderer }}>\r\n\t\t\t<div className=\"hawk-facet-rail__facet\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-heading\" onClick={event => toggleCollapsible(event)}>\r\n\t\t\t\t\t<h4>{facet.Name}</h4>\r\n\t\t\t\t\t{facet.Tooltip && (\r\n\t\t\t\t\t\t<div className=\"custom-tooltip\" ref={wrapperRef}>\r\n\t\t\t\t\t\t\t<QuestionmarkSVG class=\"hawk-questionmark\" />\r\n\t\t\t\t\t\t\t<div className=\"right\">\r\n\t\t\t\t\t\t\t\t<div dangerouslySetInnerHTML={{ __html: facet.Tooltip }} />\r\n\t\t\t\t\t\t\t\t<i />\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t)}\r\n\t\t\t\t\t{isCollapsed ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PlusSVG /> <span className=\"visually-hidden\">Expand facet category</span>{' '}\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<MinusSVG /> <span className=\"visually-hidden\">Collapse facet category</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</div>\r\n\r\n\t\t\t\t{!isCollapsed && (\r\n\t\t\t\t\t<div className=\"hawk-facet-rail__facet-body\">\r\n\t\t\t\t\t\t{facet.shouldSearch && (\r\n\t\t\t\t\t\t\t<div className=\"hawk-facet-rail__facet__quick-lookup\">\r\n\t\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\t\tvalue={filter}\r\n\t\t\t\t\t\t\t\t\tonChange={e => setFilter(e.currentTarget.value)}\r\n\t\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\t\tplaceholder={t('Quick Lookup')}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\r\n\t\t\t\t\t\t{/* render listing component */}\r\n\t\t\t\t\t\t{children}\r\n\t\t\t\t\t</div>\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t</FacetContext.Provider>\r\n\t);\r\n}\r\n\r\nexport function useFacet() {\r\n\treturn useContext(FacetContext);\r\n}\r\n\r\nexport default Facet;\r\n","import { ControllerStateAndHelpers } from 'downshift';\r\n\r\nexport enum SuggestionType {\r\n\tProduct = 'product',\r\n\tCategory = 'category',\r\n\tContent = 'content',\r\n\tPopular = 'popular',\r\n}\r\nexport abstract class Suggestion {\r\n\tpublic SuggestionType: SuggestionType;\r\n\tpublic constructor(suggestionType: SuggestionType) {\r\n\t\tthis.SuggestionType = suggestionType;\r\n\t}\r\n}\r\n\r\nexport interface SuggestionStrategy {\r\n\thandleItemChange(item: Suggestion, downshift: ControllerStateAndHelpers<Suggestion>): void;\r\n\ttoString(item: Suggestion): string;\r\n}\r\n\r\nexport interface SuggestionStrategyMatch {\r\n\tSuggestionType: SuggestionType;\r\n\tSuggestionStrategy: SuggestionStrategy;\r\n}\r\n","import * as React from 'react';\r\n\r\ninterface DashCircleSVGProps {\r\n\tclass?: string;\r\n}\r\n\r\n/**\r\n * Dash circle SVG\r\n *\r\n * @returns\r\n */\r\nfunction DashCircleSVG(props: DashCircleSVGProps) {\r\n\treturn (\r\n\t\t<svg\r\n\t\t\tviewBox=\"0 0 32 32\"\r\n\t\t\tclassName={'icon icon-help-header ' + props.class}\r\n\t\t\tfocusable=\"false\"\r\n\t\t\taria-hidden=\"true\"\r\n\t\t>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#5c5c5c\"\r\n\t\t\t\td=\"M16 0c8.837 0 16 7.163 16 16s-7.163 16-16 16c-8.837 0-16-7.163-16-16v0c0-8.837 7.163-16 16-16v0z\"\r\n\t\t\t/>\r\n\t\t\t<path\r\n\t\t\t\tfill=\"#fff\"\r\n\t\t\t\td=\"M21.51 17.594h-11.733c-0.884 0-1.6-0.716-1.6-1.6s0.716-1.6 1.6-1.6h11.733c0.884 0 1.6 0.716 1.6 1.6s-0.716 1.6-1.6 1.6z\"\r\n\t\t\t/>\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default DashCircleSVG;\r\n","import * as React from 'react';\r\n\r\ninterface CheckmarkSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Checkmark SVG\r\n *\r\n * @returns\r\n */\r\nfunction CheckmarkSVG(props: CheckmarkSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 32 32\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M27 4l-15 15-7-7-5 5 12 12 20-20z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default CheckmarkSVG;\r\n","import * as React from 'react';\r\n\r\ninterface PlusCircleSVGProps {\r\n\tclass: string;\r\n}\r\n\r\n/**\r\n * Plus SVG\r\n *\r\n * @returns\r\n */\r\nfunction PlusCircleSVG(props: PlusCircleSVGProps) {\r\n\treturn (\r\n\t\t<svg viewBox=\"0 0 20 20\" className={'icon ' + props.class} focusable=\"false\" aria-hidden=\"true\">\r\n\t\t\t<path d=\"M11 9v-4h-2v4h-4v2h4v4h2v-4h4v-2h-4zM10 20c-5.523 0-10-4.477-10-10s4.477-10 10-10v0c5.523 0 10 4.477 10 10s-4.477 10-10 10v0z\" />\r\n\t\t</svg>\r\n\t);\r\n}\r\n\r\nexport default PlusCircleSVG;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport DashCircleSVG from 'components/svg/DashCircleSVG';\r\nimport CheckmarkSVG from 'components/svg/CheckmarkSVG';\r\nimport PlusCircleSVG from 'components/svg/PlusCircleSVG';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\nfunction Checkbox() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction renderOptions() {\r\n\t\tif (facet.FieldType === 'range') {\r\n\t\t\treturn facetValues.map(value => {\r\n\t\t\t\tconst correspondingRange = facet.Ranges.find(c => c.Value === value.Value);\r\n\t\t\t\tconst rangeValueAssetUrl = correspondingRange\r\n\t\t\t\t\t? config.dashboardUrl + correspondingRange.AssetFullUrl\r\n\t\t\t\t\t: '';\r\n\r\n\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderCheckMark(isSelected)}\r\n\t\t\t\t\t\t\t{rangeValueAssetUrl !== '' ? (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span className=\"hawk-selectionInner\">\r\n\t\t\t\t\t\t\t\t\t\t<span className=\"hawk-range-asset\" title={value.Label} />\r\n\r\n\t\t\t\t\t\t\t\t\t\t<img src={rangeValueAssetUrl} alt={value.Label} />\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t) : (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{renderFacetActions(value.Value || '', isNegated)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t} else {\r\n\t\t\treturn facetValues.map(value => {\r\n\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\treturn (\r\n\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t{renderCheckMark(isSelected)}\r\n\r\n\t\t\t\t\t\t\t<span\r\n\t\t\t\t\t\t\t\tstyle={isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t</button>\r\n\r\n\t\t\t\t\t\t{renderFacetActions(value.Value || '', isNegated)}\r\n\t\t\t\t\t</li>\r\n\t\t\t\t);\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tfunction renderCheckMark(isSelected: boolean) {\r\n\t\treturn (\r\n\t\t\t<span\r\n\t\t\t\tclassName={\r\n\t\t\t\t\tisSelected\r\n\t\t\t\t\t\t? 'hawk-facet-rail__facet-checkbox hawk-facet-rail__facet-checkbox--checked'\r\n\t\t\t\t\t\t: 'hawk-facet-rail__facet-checkbox'\r\n\t\t\t\t}\r\n\t\t\t>\r\n\t\t\t\t{isSelected ? <CheckmarkSVG class=\"hawk-facet-rail__facet-checkbox-icon\" /> : null}\r\n\t\t\t</span>\r\n\t\t);\r\n\t}\r\n\tfunction renderFacetActions(value: string, isNegated: boolean) {\r\n\t\treturn (\r\n\t\t\t<button onClick={e => actor.negateFacet(value)} className=\"hawk-facet-rail__facet-btn-exclude\">\r\n\t\t\t\t{isNegated ? (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<PlusCircleSVG class=\"hawk-facet-rail__facet-btn-include\" />\r\n\t\t\t\t\t\t<span className=\"visually-hidden\">Include facet</span>\r\n\t\t\t\t\t</>\r\n\t\t\t\t) : (\r\n\t\t\t\t\t<>\r\n\t\t\t\t\t\t<DashCircleSVG />\r\n\t\t\t\t\t\t<span className=\"visually-hidden\">Exclude facet</span>\r\n\t\t\t\t\t</>\r\n\t\t\t\t)}\r\n\t\t\t</button>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-checkbox\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">{renderOptions()}</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Checkbox;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { useTranslation } from 'react-i18next';\r\n\r\nfunction Search() {\r\n\tconst { store, actor: hawkActor } = useHawkSearch();\r\n\tconst { facet, actor } = useFacet();\r\n\r\n\tconst [input, setInput] = useState<string | undefined>(undefined);\r\n\r\n\tconst { t, i18n } = useTranslation();\r\n\r\n\tfunction onKeyDown(event: React.KeyboardEvent<HTMLInputElement>) {\r\n\t\tif (event.key === 'Enter') {\r\n\t\t\tsetInput(undefined); // clear the user's entered value as we want to be driven by the store again\r\n\r\n\t\t\tactor.selectFacet(event.currentTarget.value);\r\n\t\t}\r\n\t}\r\n\r\n\tfunction clearFacet() {\r\n\t\tsetInput(undefined); // clear the user's entered value as we want to be driven by the store again\r\n\r\n\t\thawkActor.clearFacet(facet);\r\n\t}\r\n\r\n\tfunction getInputValue() {\r\n\t\tif (input !== undefined) {\r\n\t\t\t// if the user type an input, that's the value for the input\r\n\t\t\treturn input;\r\n\t\t}\r\n\r\n\t\t// otherwise, use the value from the store\r\n\t\treturn store.pendingSearch.SearchWithin || '';\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values__search\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\tvalue={getInputValue()}\r\n\t\t\t\t\t\tonChange={e => setInput(e.currentTarget.value)}\r\n\t\t\t\t\t\tonKeyDown={onKeyDown}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t\t{store.pendingSearch.SearchWithin && (\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values__search-clear\">\r\n\t\t\t\t\t<button className=\"link-button\" onClick={clearFacet}>\r\n\t\t\t\t\t\t{t('Clear')}\r\n\t\t\t\t\t</button>\r\n\t\t\t\t</div>\r\n\t\t\t)}\r\n\t\t</>\r\n\t);\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\n\r\nfunction Link() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facetValues.map(value => {\r\n\t\t\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<li key={value.Value} className=\"hawk-facet-rail__facet-list-item\">\r\n\t\t\t\t\t\t\t\t<button\r\n\t\t\t\t\t\t\t\t\tonClick={e => actor.selectFacet(value)}\r\n\t\t\t\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\t\t\t\t\taria-pressed={isSelected}\r\n\t\t\t\t\t\t\t\t>\r\n\t\t\t\t\t\t\t\t\t<span className=\"hawk-facet-rail__facet-name\">\r\n\t\t\t\t\t\t\t\t\t\t{value.Label} ({value.Count})\r\n\t\t\t\t\t\t\t\t\t</span>\r\n\t\t\t\t\t\t\t\t</button>\r\n\t\t\t\t\t\t\t</li>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Link;\r\n","import React, { useState, useEffect } from 'react';\r\n\r\nfunction formatDate(unixFormat: number) {\r\n\tconst date = new Date(unixFormat);\r\n\tconst year = date.getFullYear().toString();\r\n\tconst month = (date.getMonth() + 101).toString().substring(1);\r\n\tconst day = (date.getDate() + 100).toString().substring(1);\r\n\treturn year + '-' + month + '-' + day;\r\n}\r\nexport interface SliderCalendarInputsProps {\r\n\tmin: number;\r\n\tmax: number;\r\n\tvalues: number[];\r\n\tonValueChange(minValue: number, maxValue: number): void;\r\n}\r\nfunction SliderCalendarInputs(sliderProps: SliderCalendarInputsProps) {\r\n\tconst [minValue, setMinValue] = useState(0);\r\n\tconst [maxValue, setMaxValue] = useState(0);\r\n\r\n\tfunction onMinUpdate(event: any) {\r\n\t\tconst value = new Date(event.target.value).getTime();\r\n\r\n\t\tconst newMinValue = Number(value);\r\n\t\tif (isNaN(newMinValue) || minValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetMinValue(value);\r\n\t\tsliderProps.onValueChange(Number(newMinValue), Number(maxValue));\r\n\t}\r\n\r\n\tfunction onMaxUpdate(event: any) {\r\n\t\tconst value = new Date(event.target.value).getTime();\r\n\r\n\t\tconst newMaxValue = Number(value);\r\n\t\tif (isNaN(newMaxValue) || maxValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMaxValue(value);\r\n\t\tsliderProps.onValueChange(Number(minValue), Number(newMaxValue));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMinValue(sliderProps.values[0]);\r\n\t\tsetMaxValue(sliderProps.values[1]);\r\n\t}, [sliderProps]);\r\n\treturn (\r\n\t\t<div className=\"hawk-sliderNumeric\">\r\n\t\t\t<input\r\n\t\t\t\ttype=\"date\"\r\n\t\t\t\tvalue={formatDate(Number(minValue))}\r\n\t\t\t\tclassName=\"hawk-text-input hawk-date-value-start\"\r\n\t\t\t\tmin={formatDate(sliderProps.min)}\r\n\t\t\t\tmax={formatDate(sliderProps.max)}\r\n\t\t\t\tonChange={onMinUpdate}\r\n\t\t\t/>\r\n\r\n\t\t\t<input\r\n\t\t\t\ttype=\"date\"\r\n\t\t\t\tvalue={formatDate(Number(maxValue))}\r\n\t\t\t\tclassName=\"hawk-text-input hawk-date-value-end\"\r\n\t\t\t\tmin={formatDate(sliderProps.min)}\r\n\t\t\t\tmax={formatDate(sliderProps.max)}\r\n\t\t\t\tonChange={onMaxUpdate}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SliderCalendarInputs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PublicState } from 'rheostat';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport SliderCalendarInputs from '../SliderCalendarInputs';\r\nconst Rheostat = React.lazy(() => import(/* webpackChunkName: \"rheostat\" */ 'rheostat'));\r\n\r\nfunction formatDate(date: Date) {\r\n\tconst year = date.getFullYear().toString();\r\n\tconst month = (date.getMonth() + 101).toString().substring(1);\r\n\tconst day = (date.getDate() + 100).toString().substring(1);\r\n\treturn year + '-' + month + '-' + day;\r\n}\r\n\r\nfunction replaceHyphen(date: string) {\r\n\tif (!date) {\r\n\t\treturn date;\r\n\t}\r\n\treturn date.replace(/-/g, '/');\r\n}\r\n\r\nfunction getTime(date) {\r\n\treturn date && Number(new Date(date || '').getTime());\r\n}\r\n\r\nfunction SliderDate() {\r\n\tconst {\r\n\t\tstore: { facetSelections },\r\n\t} = useHawkSearch();\r\n\r\n\tconst {\r\n\t\tstate: { facetValues, decimalPrecision },\r\n\t\tfacet,\r\n\t\tactor,\r\n\t} = useFacet();\r\n\t// the range of the slider is defined by the first facet value. or null if there is no first value\r\n\tconst range = facetValues.length > 0 ? facetValues[0] : null;\r\n\r\n\tconst [rangeMin, setMinRange] = useState(range && getTime(range.RangeMin));\r\n\tconst [rangeMax, setMaxRange] = useState(range && getTime(range.RangeMax));\r\n\tconst [rangeStart, setStartRange] = useState(range && getTime(range.RangeStart));\r\n\tconst [rangeEnd, setEndRange] = useState(range && getTime(range.RangeEnd));\r\n\r\n\t// if there's no range, initialize to zeros\r\n\tconst [minValue, setMinValue] = useState<number>();\r\n\tconst [maxValue, setMaxValue] = useState<number>();\r\n\r\n\tuseEffect(() => {\r\n\t\tconst paramName = facet.ParamName || facet.Field;\r\n\r\n\t\t// clear min and max value if these were cleared\r\n\t\tif (!paramName || !(paramName in facetSelections)) {\r\n\t\t\tsetMinValue(undefined);\r\n\t\t\tsetMaxValue(undefined);\r\n\t\t}\r\n\t}, [facetSelections]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newRange = facetValues.length > 0 ? facetValues[0] : null;\r\n\t\tsetMinRange(newRange && getTime(newRange.RangeMin));\r\n\t\tsetMaxRange(newRange && getTime(newRange.RangeMax));\r\n\t\tsetStartRange(newRange && getTime(newRange.RangeStart));\r\n\t\tsetEndRange(newRange && getTime(newRange.RangeEnd));\r\n\t}, [facetValues]);\r\n\r\n\tif (\r\n\t\trangeMin === null ||\r\n\t\tisNaN(rangeMin) ||\r\n\t\trangeMax === null ||\r\n\t\tisNaN(rangeMax) ||\r\n\t\trangeStart === null ||\r\n\t\tisNaN(rangeStart) ||\r\n\t\trangeEnd === null ||\r\n\t\tisNaN(rangeEnd)\r\n\t) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction onSliderDrag(state: PublicState) {\r\n\t\tconst [newMin, newMax] = state.values;\r\n\t\tsetMinValue(newMin);\r\n\t\tsetMaxValue(newMax);\r\n\t}\r\n\r\n\tfunction onSliderValueChange(state: PublicState) {\r\n\t\tconst [newMin, newMax] = state.values;\r\n\r\n\t\tsetFacetValues(newMin, newMax);\r\n\t}\r\n\r\n\tfunction onValueChange(newMinValue: number, newMaxValue: number) {\r\n\t\tlet currentMinValue = minValue;\r\n\t\tlet currentMaxValue = maxValue;\r\n\t\t// if min value wasn't yet selected use range start\r\n\t\tif (minValue === undefined && rangeStart !== null) {\r\n\t\t\tcurrentMinValue = rangeStart; // setMinValue(rangeStart);\r\n\t\t}\r\n\r\n\t\t// if max value wasn't yet selected use range end\r\n\t\tif (maxValue === undefined && rangeEnd !== null) {\r\n\t\t\tcurrentMaxValue = rangeEnd;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue === undefined || currentMaxValue === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue !== newMinValue && newMinValue <= currentMaxValue) {\r\n\t\t\tif (rangeMin !== null && newMinValue <= rangeMin) {\r\n\t\t\t\tcurrentMinValue = rangeMin;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentMinValue = newMinValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (currentMaxValue !== newMaxValue && newMaxValue >= currentMinValue) {\r\n\t\t\tif (rangeMax !== null && newMaxValue >= rangeMax) {\r\n\t\t\t\tcurrentMaxValue = rangeMax;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentMaxValue = newMaxValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetFacetValues(currentMinValue, currentMaxValue);\r\n\t}\r\n\r\n\tfunction setFacetValues(minVal: number | undefined, maxVal: number | undefined) {\r\n\t\tif (minVal === undefined || maxVal === undefined || isNaN(minVal) || isNaN(maxVal)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMinValue(minVal);\r\n\t\tsetMaxValue(maxVal);\r\n\r\n\t\tconst formattedMinVal = replaceHyphen(formatDate(new Date(minVal)));\r\n\t\tconst formattedMaxVal = replaceHyphen(formatDate(new Date(maxVal)));\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\t\tconst selection = `${formattedMinVal},${formattedMaxVal}`;\r\n\t\tactor.setFacets([selection]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<React.Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t<SliderCalendarInputs\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tminValue === undefined ? rangeStart : Math.max(minValue, rangeMin),\r\n\t\t\t\t\t\t\tmaxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonValueChange={onValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Rheostat\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tMath.floor(minValue === undefined ? rangeStart : Math.max(minValue, rangeMin)),\r\n\t\t\t\t\t\t\tMath.ceil(maxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax)),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonValuesUpdated={onSliderDrag}\r\n\t\t\t\t\t\tonChange={onSliderValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Suspense>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SliderDate;\r\n","import React, { useState, useEffect } from 'react';\r\nimport NumberFormat from 'react-number-format';\r\n\r\nexport interface SliderNumericInputsProps {\r\n\tmin: number;\r\n\tmax: number;\r\n\tvalues: number[];\r\n\tisCurrency: boolean;\r\n\tcurrencySymbol: string;\r\n\tdecimalPrecision: number;\r\n\tonValueChange(minValue: number, maxValue: number): void;\r\n}\r\nfunction SliderNumericInputs(sliderProps: SliderNumericInputsProps) {\r\n\tconst [minValue, setMinValue] = useState('' as string);\r\n\tconst [maxValue, setMaxValue] = useState('' as string);\r\n\r\n\tfunction onMinUpdate(values: any) {\r\n\t\tconst { formattedValue, value } = values;\r\n\r\n\t\tconst newMinValue = Number(value);\r\n\t\tif (isNaN(newMinValue) || minValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tsetMinValue(value);\r\n\t}\r\n\r\n\tfunction onMaxUpdate(values: any) {\r\n\t\tconst { formattedValue, value } = values;\r\n\r\n\t\tconst newMaxValue = Number(value);\r\n\t\tif (isNaN(newMaxValue) || maxValue === value) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMaxValue(value);\r\n\t}\r\n\tfunction reloadFacets(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsliderProps.onValueChange(Number(minValue), Number(maxValue));\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tsetMinValue(sliderProps.values[0].toString());\r\n\t\tsetMaxValue(sliderProps.values[1].toString());\r\n\t}, [sliderProps]);\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-sliderNumeric\">\r\n\t\t\t<NumberFormat\r\n\t\t\t\tthousandSeparator={sliderProps.isCurrency}\r\n\t\t\t\tprefix={sliderProps.isCurrency ? sliderProps.currencySymbol : ''}\r\n\t\t\t\tvalue={minValue}\r\n\t\t\t\tclassName=\"hawk-numericInput numeric-from\"\r\n\t\t\t\tmin={sliderProps.min}\r\n\t\t\t\tmax={sliderProps.max}\r\n\t\t\t\tonValueChange={onMinUpdate}\r\n\t\t\t\tonBlur={reloadFacets}\r\n\t\t\t\tdecimalScale={sliderProps.decimalPrecision}\r\n\t\t\t/>\r\n\r\n\t\t\t<NumberFormat\r\n\t\t\t\tthousandSeparator={sliderProps.isCurrency}\r\n\t\t\t\tprefix={sliderProps.isCurrency ? sliderProps.currencySymbol : ''}\r\n\t\t\t\tvalue={maxValue}\r\n\t\t\t\tclassName=\"hawk-numericInput numeric-to\"\r\n\t\t\t\tmin={sliderProps.min}\r\n\t\t\t\tmax={sliderProps.max}\r\n\t\t\t\tonValueChange={onMaxUpdate}\r\n\t\t\t\tonBlur={reloadFacets}\r\n\t\t\t\tdecimalScale={sliderProps.decimalPrecision}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SliderNumericInputs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { PublicState } from 'rheostat';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport SliderNumericInputs from 'components/ui/Facets/SliderNumericInputs';\r\nconst Rheostat = React.lazy(() => import(/* webpackChunkName: \"rheostat\" */ 'rheostat'));\r\n\r\nfunction SliderNumeric() {\r\n\tconst {\r\n\t\tstore: { facetSelections },\r\n\t} = useHawkSearch();\r\n\r\n\tconst {\r\n\t\tstate: { facetValues, decimalPrecision },\r\n\t\tfacet,\r\n\t\tactor,\r\n\t} = useFacet();\r\n\t// the range of the slider is defined by the first facet value. or null if there is no first value\r\n\tconst range = facetValues.length > 0 ? facetValues[0] : null;\r\n\r\n\tconst [rangeMin, setMinRange] = useState(range && Number(parseFloat(range.RangeMin || '').toFixed(2)));\r\n\tconst [rangeMax, setMaxRange] = useState(range && Number(parseFloat(range.RangeMax || '').toFixed(2)));\r\n\tconst [rangeStart, setStartRange] = useState(range && Number(parseFloat(range.RangeStart || '').toFixed(2)));\r\n\tconst [rangeEnd, setEndRange] = useState(range && Number(parseFloat(range.RangeEnd || '').toFixed(2)));\r\n\r\n\t// if there's no range, initialize to zeros\r\n\tconst [minValue, setMinValue] = useState<number>();\r\n\tconst [maxValue, setMaxValue] = useState<number>();\r\n\r\n\tconst [isCurency, setIsCurrency] = useState(facet.IsCurrency);\r\n\tconst [currencySymbol, setCurrencySymbol] = useState(facet.CurrencySymbol);\r\n\r\n\tuseEffect(() => {\r\n\t\tsetCurrencySymbol(facet.CurrencySymbol || '$');\r\n\t\tsetIsCurrency(facet.IsCurrency);\r\n\t}, [facet]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst paramName = facet.ParamName || facet.Field;\r\n\r\n\t\t// clear min and max value if these were cleared\r\n\t\tif (!paramName || !(paramName in facetSelections)) {\r\n\t\t\tsetMinValue(undefined);\r\n\t\t\tsetMaxValue(undefined);\r\n\t\t} else if (\r\n\t\t\tparamName in facetSelections &&\r\n\t\t\tfacetSelections[paramName].items &&\r\n\t\t\tfacetSelections[paramName].items.length > 0\r\n\t\t) {\r\n\t\t\tconst selectedValues = facetSelections[paramName].items[0].value.split(',');\r\n\t\t\tsetMinValue(Number(selectedValues[0]));\r\n\t\t\tsetMaxValue(Number(selectedValues[1]));\r\n\t\t}\r\n\t}, [facetSelections]);\r\n\r\n\tuseEffect(() => {\r\n\t\tconst newRange = facetValues.length > 0 ? facetValues[0] : null;\r\n\t\tsetMinRange(newRange && Number(parseFloat(newRange.RangeMin || '').toFixed(2)));\r\n\t\tsetMaxRange(newRange && Number(parseFloat(newRange.RangeMax || '').toFixed(2)));\r\n\t\tsetStartRange(newRange && Number(parseFloat(newRange.RangeStart || '').toFixed(2)));\r\n\t\tsetEndRange(newRange && Number(parseFloat(newRange.RangeEnd || '').toFixed(2)));\r\n\t}, [facetValues]);\r\n\r\n\tif (\r\n\t\trangeMin === null ||\r\n\t\tisNaN(rangeMin) ||\r\n\t\trangeMax === null ||\r\n\t\tisNaN(rangeMax) ||\r\n\t\trangeStart === null ||\r\n\t\tisNaN(rangeStart) ||\r\n\t\trangeEnd === null ||\r\n\t\tisNaN(rangeEnd)\r\n\t) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction onSliderValueChange(state: PublicState) {\r\n\t\tconst [newMin, newMax] = state.values;\r\n\r\n\t\tsetFacetValues(newMin, newMax);\r\n\t}\r\n\r\n\tfunction onValueChange(newMinValue: number, newMaxValue: number) {\r\n\t\tlet currentMinValue = minValue;\r\n\t\tlet currentMaxValue = maxValue;\r\n\t\t// if min value wasn't yet selected use range start\r\n\t\tif (minValue === undefined && rangeStart !== null) {\r\n\t\t\tcurrentMinValue = rangeStart; // setMinValue(rangeStart);\r\n\t\t}\r\n\r\n\t\t// if max value wasn't yet selected use range end\r\n\t\tif (maxValue === undefined && rangeEnd !== null) {\r\n\t\t\tcurrentMaxValue = rangeEnd;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue === undefined || currentMaxValue === undefined) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tif (currentMinValue !== newMinValue && newMinValue <= currentMaxValue) {\r\n\t\t\tif (rangeMin !== null && newMinValue <= rangeMin) {\r\n\t\t\t\tcurrentMinValue = rangeMin;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentMinValue = newMinValue;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tif (currentMaxValue !== newMaxValue && newMaxValue >= currentMinValue) {\r\n\t\t\tif (rangeMax !== null && newMaxValue >= rangeMax) {\r\n\t\t\t\tcurrentMaxValue = rangeMax;\r\n\t\t\t} else {\r\n\t\t\t\tcurrentMaxValue = newMaxValue;\r\n\t\t\t}\r\n\t\t}\r\n\t\tsetMinValue(currentMinValue);\r\n\t\tsetMaxValue(currentMaxValue);\r\n\t\tsetFacetValues(currentMinValue, currentMaxValue);\r\n\t}\r\n\r\n\tfunction setFacetValues(minVal: number | undefined, maxVal: number | undefined) {\r\n\t\tif (minVal === undefined || maxVal === undefined || isNaN(minVal) || isNaN(maxVal)) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tsetMinValue(minVal);\r\n\t\tsetMaxValue(maxVal);\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\t\tconst selection = `${minVal},${maxVal}`;\r\n\r\n\t\tactor.setFacets([selection]);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<React.Suspense fallback={<div>Loading...</div>}>\r\n\t\t\t\t\t<SliderNumericInputs\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tcurrencySymbol={currencySymbol}\r\n\t\t\t\t\t\tisCurrency={isCurency}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tminValue === undefined ? rangeStart : Math.max(minValue, rangeMin),\r\n\t\t\t\t\t\t\tmaxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonValueChange={onValueChange}\r\n\t\t\t\t\t\tdecimalPrecision={decimalPrecision}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<Rheostat\r\n\t\t\t\t\t\tmin={rangeMin}\r\n\t\t\t\t\t\tmax={rangeMax}\r\n\t\t\t\t\t\tvalues={[\r\n\t\t\t\t\t\t\tMath.floor(minValue === undefined ? rangeStart : Math.max(minValue, rangeMin)),\r\n\t\t\t\t\t\t\tMath.ceil(maxValue === undefined ? rangeEnd : Math.min(maxValue, rangeMax)),\r\n\t\t\t\t\t\t]}\r\n\t\t\t\t\t\tonChange={onSliderValueChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</React.Suspense>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SliderNumeric;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport SliderDate from './SliderDate';\r\nimport SliderNumeric from './SliderNumeric';\r\n\r\nfunction Slider() {\r\n\tconst { facet } = useFacet();\r\n\tif (facet.DataType && facet.DataType === 'datetime') {\r\n\t\treturn <SliderDate />;\r\n\t}\r\n\treturn <SliderNumeric />;\r\n}\r\n\r\nexport default Slider;\r\n","import React, { useState } from 'react';\r\n\r\nimport { Value } from 'models/Facets/Value';\r\nimport { Swatch } from 'models/Facets';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\n\r\nexport interface SwatchItemProps {\r\n\tswatchValue: Value;\r\n\tfacetSwatch: Swatch;\r\n\tisNegated: boolean;\r\n\tisSelected: boolean;\r\n\tisColor: boolean;\r\n\tonSwatchSelected(facetValue: string, isNegated: boolean): void;\r\n}\r\n\r\nfunction SwatchItem(item: SwatchItemProps) {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst facetValue = item.swatchValue.Value || '';\r\n\r\n\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\tconst swatchUrl =\r\n\t\tconfig.dashboardUrl + (!item.facetSwatch.AssetUrl ? item.facetSwatch.AssetName : item.facetSwatch.AssetUrl);\r\n\r\n\tconst colorSwatchStyle = {\r\n\t\tbackgroundColor: item.facetSwatch.Color,\r\n\t};\r\n\r\n\tconst listItemClassNames =\r\n\t\t'hawk-facet-rail__facet-list-item' +\r\n\t\t(item.isSelected ? ' hawkFacet-active' : '') +\r\n\t\t(item.isNegated ? ' hawkFacet-negative' : '');\r\n\r\n\treturn (\r\n\t\t<li key={item.facetSwatch.Value} className={listItemClassNames}>\r\n\t\t\t<button\r\n\t\t\t\tonClick={e => item.onSwatchSelected(facetValue, false)}\r\n\t\t\t\tclassName=\"hawk-facet-rail__facet-btn hawk-styleSwatch\"\r\n\t\t\t\taria-pressed={item.isSelected}\r\n\t\t\t>\r\n\t\t\t\t<span className=\"hawk-selectionInner\">\r\n\t\t\t\t\t{item.isColor ? (\r\n\t\t\t\t\t\t<span className=\"hawk-swatchColor\" style={colorSwatchStyle} title={item.facetSwatch.Value} />\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<img src={swatchUrl} alt={item.facetSwatch.Value} />\r\n\t\t\t\t\t)}\r\n\t\t\t\t</span>\r\n\t\t\t</button>\r\n\t\t\t<button className=\"hawk-negativeIcon\">\r\n\t\t\t\t<i className=\"hawkIcon-blocked\" onClick={e => item.onSwatchSelected(facetValue, true)} />\r\n\t\t\t</button>\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default SwatchItem;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport SwatchItem from './SwatchItem';\r\n\r\nfunction Swatch() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tactor,\r\n\t\tstate: { facetValues },\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction onSwatchSelected(facetValue: string, isNegated: boolean) {\r\n\t\tisNegated ? actor.negateFacet(facetValue) : actor.selectFacet(facetValue);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-swatch\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facet.SwatchData &&\r\n\t\t\t\t\t\tfacetValues.map(value => {\r\n\t\t\t\t\t\t\tconst facetValue = value.Value || '';\r\n\t\t\t\t\t\t\t// find swatch that is corresponding with value\r\n\t\t\t\t\t\t\tconst facetSwatch =\r\n\t\t\t\t\t\t\t\tfacet.SwatchData &&\r\n\t\t\t\t\t\t\t\tfacet.SwatchData.find(s => s.Value.toLowerCase() === facetValue.toLowerCase());\r\n\t\t\t\t\t\t\tif (!facetSwatch) {\r\n\t\t\t\t\t\t\t\treturn;\r\n\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\t\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\t\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\r\n\t\t\t\t\t\t\tconst isColor = !!facetSwatch.Color;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<SwatchItem\r\n\t\t\t\t\t\t\t\t\tkey={facetValue}\r\n\t\t\t\t\t\t\t\t\tswatchValue={value}\r\n\t\t\t\t\t\t\t\t\tfacetSwatch={facetSwatch}\r\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\t\tisColor={isColor}\r\n\t\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\t\tonSwatchSelected={onSwatchSelected}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Swatch;\r\n","import React, { useState } from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport CheckmarkSVG from 'components/svg/CheckmarkSVG';\r\nimport { Value } from 'models/Facets';\r\nimport PlusCircleSVG from 'components/svg/PlusCircleSVG';\r\nimport DashCircleSVG from 'components/svg/DashCircleSVG';\r\n\r\nexport interface NestedItemProps {\r\n\thierarchyValue: Value;\r\n\tisNegated: boolean;\r\n\tisSelected: boolean;\r\n\tonValueSelected(facetValue: Value, isNegated: boolean): void;\r\n}\r\n\r\nfunction NestedItem(item: NestedItemProps) {\r\n\tconst { store } = useHawkSearch();\r\n\tconst { facet } = useFacet();\r\n\r\n\tconst [isExpanded, setIsExpanded] = useState(false);\r\n\tconst [isTruncated, setIsTruncated] = useState(facet.shouldTruncate);\r\n\r\n\tconst hierarchyValue = item.hierarchyValue || '';\r\n\tlet hierarchyChildren = item.hierarchyValue.Children || [];\r\n\r\n\tlet remainingValues = 0;\r\n\r\n\tconst shouldTruncateChildren =\r\n\t\tfacet.DisplayType === 'truncating' && hierarchyChildren.length > facet.TruncateThreshold;\r\n\r\n\tif (shouldTruncateChildren && isTruncated) {\r\n\t\tconst valuesBeforeTrunc = hierarchyChildren.length;\r\n\r\n\t\thierarchyChildren = hierarchyChildren.slice(0, facet.TruncateThreshold);\r\n\r\n\t\tremainingValues = valuesBeforeTrunc - facet.TruncateThreshold;\r\n\t}\r\n\r\n\tfunction renderChildTruncation() {\r\n\t\treturn (\r\n\t\t\t<>\r\n\t\t\t\t{shouldTruncateChildren && (\r\n\t\t\t\t\t<li className=\"hawk-facet-rail__facet-list-item hawk-show-more\">\r\n\t\t\t\t\t\t<button onClick={() => setIsTruncated(!isTruncated)} className=\"hawk-facet-rail__show-more-btn\">\r\n\t\t\t\t\t\t\t{isTruncated ? `(+) Show ${remainingValues} More` : '(-) Show Less'}\r\n\t\t\t\t\t\t</button>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t)}\r\n\t\t\t</>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<li className=\"hawk-facet-rail__facet-list-item hawkFacet-group\">\r\n\t\t\t<div className=\"hawkFacet-group__inline\">\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={() => item.onValueSelected(hierarchyValue, false)}\r\n\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn\"\r\n\t\t\t\t\taria-pressed={item.isSelected}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tclassName={\r\n\t\t\t\t\t\t\titem.isSelected\r\n\t\t\t\t\t\t\t\t? 'hawk-facet-rail__facet-checkbox hawk-facet-rail__facet-checkbox--checked'\r\n\t\t\t\t\t\t\t\t: 'hawk-facet-rail__facet-checkbox'\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.isSelected ? <CheckmarkSVG class=\"hawk-facet-rail__facet-checkbox-icon\" /> : null}\r\n\t\t\t\t\t</span>\r\n\r\n\t\t\t\t\t<span\r\n\t\t\t\t\t\tstyle={item.isNegated ? { textDecoration: 'line-through' } : undefined}\r\n\t\t\t\t\t\tclassName=\"hawk-facet-rail__facet-name\"\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{item.hierarchyValue.Label} ({item.hierarchyValue.Count})\r\n\t\t\t\t\t</span>\r\n\t\t\t\t</button>\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={e => item.onValueSelected(hierarchyValue, true)}\r\n\t\t\t\t\tclassName=\"hawk-facet-rail__facet-btn-exclude\"\r\n\t\t\t\t>\r\n\t\t\t\t\t{item.isNegated ? (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<PlusCircleSVG class=\"hawk-facet-rail__facet-btn-include\" />\r\n\t\t\t\t\t\t\t<span className=\"visually-hidden\">Include facet</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t) : (\r\n\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t<DashCircleSVG />\r\n\t\t\t\t\t\t\t<span className=\"visually-hidden\">Exclude facet</span>\r\n\t\t\t\t\t\t</>\r\n\t\t\t\t\t)}\r\n\t\t\t\t</button>\r\n\t\t\t\t{hierarchyChildren.length > 0 ? (\r\n\t\t\t\t\t<button\r\n\t\t\t\t\t\tclassName={isExpanded ? 'hawk-collapseState' : 'hawk-collapseState collapsed'}\r\n\t\t\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\t\t\tonClick={() => setIsExpanded(!isExpanded)}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t&nbsp;\r\n\t\t\t\t\t</button>\r\n\t\t\t\t) : null}\r\n\t\t\t</div>\r\n\t\t\t{isExpanded && hierarchyChildren ? (\r\n\t\t\t\t<div className=\"hawk-facet-rail__w-100\">\r\n\t\t\t\t\t<ul className=\"hawkFacet-group-inside\">\r\n\t\t\t\t\t\t{hierarchyChildren.map(value => {\r\n\t\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\t\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\t\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t\t<NestedItem\r\n\t\t\t\t\t\t\t\t\tkey={value.Path}\r\n\t\t\t\t\t\t\t\t\thierarchyValue={value}\r\n\t\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\t\tonValueSelected={item.onValueSelected}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t);\r\n\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t{renderChildTruncation()}\r\n\t\t\t\t\t</ul>\r\n\t\t\t\t</div>\r\n\t\t\t) : (\r\n\t\t\t\t<></>\r\n\t\t\t)}\r\n\t\t</li>\r\n\t);\r\n}\r\n\r\nexport default NestedItem;\r\n","import React from 'react';\r\n\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { FacetSelectionState } from 'store/Store';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\nimport NestedItem from './NestedItem';\r\nimport { Value } from 'models/Facets/Value';\r\n\r\nfunction Nested() {\r\n\tconst { store } = useHawkSearch();\r\n\tconst {\r\n\t\tfacet,\r\n\t\tstate: { facetValues },\r\n\t\tactor,\r\n\t\trenderer,\r\n\t} = useFacet();\r\n\r\n\tfunction onValueSelected(facetValue: Value, isNegated: boolean) {\r\n\t\tisNegated ? actor.negateFacet(facetValue) : actor.selectFacet(facetValue);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-checkbox\">\r\n\t\t\t\t<ul className=\"hawk-facet-rail__facet-list\">\r\n\t\t\t\t\t{facetValues.map(value => {\r\n\t\t\t\t\t\t// facets can be selected or negated, so explicitly check that the facet is not selected\r\n\t\t\t\t\t\tconst selectionState = store.isFacetSelected(facet, value).state;\r\n\r\n\t\t\t\t\t\tconst isSelected = selectionState !== FacetSelectionState.NotSelected;\r\n\t\t\t\t\t\tconst isNegated = selectionState === FacetSelectionState.Negated;\r\n\r\n\t\t\t\t\t\treturn (\r\n\t\t\t\t\t\t\t<NestedItem\r\n\t\t\t\t\t\t\t\tkey={value.Value}\r\n\t\t\t\t\t\t\t\thierarchyValue={value}\r\n\t\t\t\t\t\t\t\tisSelected={isSelected}\r\n\t\t\t\t\t\t\t\tisNegated={isNegated}\r\n\t\t\t\t\t\t\t\tonValueSelected={onValueSelected}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t);\r\n\t\t\t\t\t})}\r\n\t\t\t\t</ul>\r\n\t\t\t</div>\r\n\r\n\t\t\t{/* render the default truncation control as we don't need to customize this */}\r\n\t\t\t{renderer.renderTruncation()}\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default Nested;\r\n","import React, { useState } from 'react';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useFacet } from 'components/ui/Facets/Facet';\r\n\r\n// Format date with hyphen format so input type date can read the value\r\nfunction formatDate(date: Date) {\r\n\tconst year = date.getFullYear().toString();\r\n\tconst month = (date.getMonth() + 101).toString().substring(1);\r\n\tconst day = (date.getDate() + 100).toString().substring(1);\r\n\treturn year + '-' + month + '-' + day;\r\n}\r\n\r\nfunction replaceHyphen(date: string) {\r\n\tif (!date) {\r\n\t\treturn date;\r\n\t}\r\n\treturn date.replace(/-/g, '/');\r\n}\r\n\r\nfunction OpenRange() {\r\n\tconst { actor: hawkActor } = useHawkSearch();\r\n\r\n\tconst {\r\n\t\tstate: { facetValues },\r\n\t\tfacet,\r\n\t\tactor,\r\n\t} = useFacet();\r\n\r\n\tconst daterange = facetValues.length > 0 ? facetValues[0] : null;\r\n\tconst rangeStartDate = daterange && daterange.RangeStart ? formatDate(new Date(daterange.RangeStart)) : '';\r\n\tconst rangeEndDate = daterange && daterange.RangeEnd ? formatDate(new Date(daterange.RangeEnd)) : '';\r\n\r\n\t// if there's no range, initialize to empty strings\r\n\tconst [minDateValue, setdateStartValue] = useState(rangeStartDate || '');\r\n\tconst [maxDateValue, setdateEndValue] = useState(rangeEndDate || '');\r\n\t// the open range boundary values are defined by the first facet value. or null if there is no first value\r\n\r\n\tconst range = facetValues.length > 0 ? facetValues[0] : null;\r\n\r\n\tconst rangeStart = (range && range.RangeStart) || '';\r\n\tconst rangeEnd = (range && range.RangeEnd) || '';\r\n\r\n\t// if there's no range, initialize to empty strings\r\n\tconst [minValue, setStartValue] = useState(rangeStart || '');\r\n\tconst [maxValue, setEndValue] = useState(rangeEnd || '');\r\n\r\n\tif (rangeStart === null || rangeEnd === null) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction onRangeStartChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetFacetValues(event.currentTarget.value, maxValue);\r\n\t}\r\n\r\n\tfunction onRangeEndChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetFacetValues(minValue, event.currentTarget.value);\r\n\t}\r\n\r\n\tfunction setFacetValues(startVal: string, endVal: string) {\r\n\t\tsetStartValue(startVal);\r\n\t\tsetEndValue(endVal);\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\r\n\t\tif (startVal === '' && endVal === '') {\r\n\t\t\thawkActor.clearFacet(facet);\r\n\t\t} else {\r\n\t\t\tconst selection = `${startVal},${endVal}`;\r\n\t\t\tactor.setFacets([selection]);\r\n\t\t}\r\n\t}\r\n\r\n\tif (rangeStart === null || rangeEnd === null) {\r\n\t\t// this facet is somehow misconfigured so don't render\r\n\t\treturn null;\r\n\t}\r\n\r\n\tfunction ondateRangeStartChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetdateFacetValues(event.currentTarget.value, maxDateValue);\r\n\t}\r\n\r\n\tfunction ondateRangeEndChange(event: React.FormEvent<HTMLInputElement>) {\r\n\t\tsetdateFacetValues(minDateValue, event.currentTarget.value);\r\n\t}\r\n\r\n\tfunction setdateFacetValues(startVal: string, endVal: string) {\r\n\t\tsetdateStartValue(startVal);\r\n\t\tsetdateEndValue(endVal);\r\n\r\n\t\t// this selection is sent to hawk separated by commas, so build the value here\r\n\r\n\t\tif (startVal === '' && endVal === '') {\r\n\t\t\thawkActor.clearFacet(facet);\r\n\t\t} else {\r\n\t\t\tconst selection = `${replaceHyphen(startVal)},${replaceHyphen(endVal)}`;\r\n\t\t\tactor.setFacets([selection]);\r\n\t\t}\r\n\t}\r\n\r\n\tif (facet.DataType && facet.DataType === 'datetime') {\r\n\t\treturn (\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t\t<div className=\"hawk-open-range hawk-facet-type-date\">\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tclassName=\"hawk-text-input hawk-date-value-start\"\r\n\t\t\t\t\t\t\tvalue={minDateValue}\r\n\t\t\t\t\t\t\tmin={rangeStartDate}\r\n\t\t\t\t\t\t\tmax={rangeEndDate}\r\n\t\t\t\t\t\t\tonChange={ondateRangeStartChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\ttype=\"date\"\r\n\t\t\t\t\t\t\tclassName=\"hawk-text-input hawk-date-value-end\"\r\n\t\t\t\t\t\t\tvalue={maxDateValue}\r\n\t\t\t\t\t\t\tmin={rangeStartDate}\r\n\t\t\t\t\t\t\tmax={rangeEndDate}\r\n\t\t\t\t\t\t\tonChange={ondateRangeEndChange}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"hawk-facet-rail__facet-values\">\r\n\t\t\t<div className=\"hawk-facet-rail__facet-values-link\">\r\n\t\t\t\t<div className=\"hawk-open-range\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"hawk-text-input value-start\"\r\n\t\t\t\t\t\tdata-type=\"currency\"\r\n\t\t\t\t\t\tvalue={minValue}\r\n\t\t\t\t\t\tonChange={onRangeStartChange}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tclassName=\"hawk-text-input value-end\"\r\n\t\t\t\t\t\tonChange={onRangeEndChange}\r\n\t\t\t\t\t\tvalue={maxValue}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default OpenRange;\r\n","export enum FacetType {\r\n\tCheckbox = 'checkbox',\r\n\tNestedCheckbox = 'nestedcheckbox',\r\n\tLink = 'link',\r\n\tNestedlink = 'nestedlink',\r\n\tSlider = 'slider',\r\n\tSwatch = 'swatch',\r\n\tRating = 'rating',\r\n\tSize = 'size',\r\n\tSearchWithin = 'search',\r\n\tRecentSearches = 'recentsearches',\r\n\tRelatedSearches = 'relatedsearches',\r\n\tOpenRange = 'openRange',\r\n}\r\n","import {\r\n\tCheckbox as DefaultCheckbox,\r\n\tNestedCheckbox as DefaultNestedCheckbox,\r\n\tSearch as DefaultSearch,\r\n\tLink as DefaultLink,\r\n\tSlider as DefaultSlider,\r\n\tSwatch as DefaultSwatch,\r\n\tOpenRange as DefaultOpenRange,\r\n} from 'components/ui/Facets/FacetTypes';\r\nimport { FacetComponent } from 'types/FacetComponent';\r\nimport { FacetType } from 'models/Facets/FacetType';\r\nimport { SuggestionStrategyMatch, SuggestionType } from 'models/Autocomplete/Suggestion';\r\nimport { ProductStrategy, CategoryStrategy, PopularStrategy, ContentStrategy } from 'models/Autocomplete';\r\n\r\n// the default set of facet components that we support\r\nconst defaultFacetComponents: FacetComponent[] = [\r\n\t{ facetType: FacetType.Checkbox, component: DefaultCheckbox },\r\n\t{ facetType: FacetType.NestedCheckbox, component: DefaultNestedCheckbox },\r\n\t{ facetType: FacetType.SearchWithin, component: DefaultSearch },\r\n\t{ facetType: FacetType.Link, component: DefaultLink },\r\n\t{ facetType: FacetType.Slider, component: DefaultSlider },\r\n\t{ facetType: FacetType.Swatch, component: DefaultSwatch },\r\n\t{ facetType: FacetType.OpenRange, component: DefaultOpenRange },\r\n];\r\n\r\nconst defaultAutocompleteStrategies: SuggestionStrategyMatch[] = [\r\n\t{ SuggestionType: SuggestionType.Product, SuggestionStrategy: new ProductStrategy() },\r\n\t{ SuggestionType: SuggestionType.Category, SuggestionStrategy: new CategoryStrategy() },\r\n\t{ SuggestionType: SuggestionType.Popular, SuggestionStrategy: new PopularStrategy() },\r\n\t{ SuggestionType: SuggestionType.Content, SuggestionStrategy: new ContentStrategy() },\r\n];\r\n\r\n/**\r\n * Builds a list of all supported facet components by also taking into consideration overridden components.\r\n */\r\nexport function getFacetComponents(overridedComponents: FacetComponent[]) {\r\n\tconst facetComponents: FacetComponent[] = [];\r\n\r\n\t// tslint:disable-next-line:forin\r\n\tfor (const key in FacetType) {\r\n\t\tconst fType = FacetType[key];\r\n\r\n\t\tconst fComponent =\r\n\t\t\t// check to see if the facet is overridden\r\n\t\t\toverridedComponents.find(component => component.facetType === fType) ||\r\n\t\t\t// otherwise, pull from defaults\r\n\t\t\tdefaultFacetComponents.find(component => component.facetType === fType);\r\n\r\n\t\tif (fComponent) {\r\n\t\t\tfacetComponents.push(fComponent);\r\n\t\t}\r\n\t}\r\n\r\n\treturn facetComponents;\r\n}\r\n\r\n/**\r\n * Builds a list of all supported autocomplete suggestion strategiesby also taking into consideration overridden strategies.\r\n */\r\nexport function getAutocompleteStrategies(overridedStrategies: SuggestionStrategyMatch[]): SuggestionStrategyMatch[] {\r\n\tconst suggestionStrategies: SuggestionStrategyMatch[] = [];\r\n\r\n\t// tslint:disable-next-line:forin\r\n\tfor (const key in SuggestionType) {\r\n\t\tconst sType = SuggestionType[key];\r\n\r\n\t\tconst autocompleteStrategy =\r\n\t\t\t// check to see if the facet is overridden\r\n\t\t\toverridedStrategies.find(strategyMatch => strategyMatch.SuggestionType === sType) ||\r\n\t\t\t// otherwise, pull from defaults\r\n\t\t\tdefaultAutocompleteStrategies.find(strategyMatch => strategyMatch.SuggestionType === sType);\r\n\r\n\t\tif (autocompleteStrategy) {\r\n\t\t\tsuggestionStrategies.push(autocompleteStrategy);\r\n\t\t}\r\n\t}\r\n\treturn suggestionStrategies;\r\n}\r\n","import React from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\n\r\nimport { Response, Product, Popular, Category, Content } from 'models/Autocomplete';\r\nimport { Suggestion } from '../../../models/Autocomplete/Suggestion';\r\nimport { CustomSuggestionListProps } from 'models/Autocomplete/CustomSuggestionList';\r\n\r\nexport interface SearchSuggestionsListProps {\r\n\tisLoading: boolean;\r\n\tsearchResults: Response;\r\n\tdownshift: ControllerStateAndHelpers<Suggestion>;\r\n\tonViewMatches: (downshift: ControllerStateAndHelpers<Suggestion>) => void;\r\n\tSuggestionList?: React.ComponentType<CustomSuggestionListProps>;\r\n}\r\n\r\nfunction hasAllEmpty(popular: Popular[], categories: Category[], products: Product[], content: Content[]) {\r\n\tconst hasPopular = popular && popular.length === 0;\r\n\tconst hasCategories = categories && categories.length === 0;\r\n\tconst hasProducts = products && products.length === 0;\r\n\tconst hasContent = content && content.length === 0;\r\n\treturn hasPopular && hasCategories && hasProducts && hasContent;\r\n}\r\n\r\nfunction SearchSuggestionsList({\r\n\tisLoading,\r\n\tsearchResults,\r\n\tdownshift,\r\n\tonViewMatches,\r\n\tSuggestionList,\r\n}: SearchSuggestionsListProps) {\r\n\tconst { Popular: popular, Categories: categories, Products: products, Content: content } = searchResults;\r\n\r\n\tconst isRecordEmpty = hasAllEmpty(popular, categories, products, content);\r\n\r\n\tif (isRecordEmpty) {\r\n\t\treturn null;\r\n\t}\r\n\treturn SuggestionList ? (\r\n\t\t<SuggestionList\r\n\t\t\tisLoading={isLoading}\r\n\t\t\tdownshift={downshift}\r\n\t\t\tsearchResults={searchResults}\r\n\t\t\tonViewMatches={onViewMatches}\r\n\t\t/>\r\n\t) : null;\r\n}\r\n\r\nexport default SearchSuggestionsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { ControllerStateAndHelpers } from 'downshift';\r\nimport axios, { CancelToken } from 'axios';\r\n\r\nimport HawkClient from 'net/HawkClient';\r\nimport { Response, Product, Category } from 'models/Autocomplete';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport SearchSuggestionsList from './SearchSuggestionsList';\r\nimport { Suggestion } from 'models/Autocomplete/Suggestion';\r\nimport { CustomSuggestionListProps } from 'models/Autocomplete/CustomSuggestionList';\r\n\r\nexport interface SearchSuggestionsProps {\r\n\t/** The user entered search string in the autocomplete text input. */\r\n\tquery: string;\r\n\r\n\t/** Downshift's render prop parameter. */\r\n\tdownshift: ControllerStateAndHelpers<Suggestion>;\r\n\r\n\tonViewMatches: (downshift: ControllerStateAndHelpers<Suggestion>) => void;\r\n\tSuggestionList?: React.ComponentType<CustomSuggestionListProps>;\r\n}\r\n\r\nfunction SearchSuggestions({ query, downshift, onViewMatches, SuggestionList }: SearchSuggestionsProps) {\r\n\tconst { config } = useHawkConfig();\r\n\r\n\tconst client = new HawkClient(config);\r\n\r\n\tconst [results, setResults] = useState({} as Response);\r\n\tconst [isLoading, setIsLoading] = useState(false);\r\n\r\n\t// debounce the input search string so that we only do an autocomplete query every so often\r\n\tuseEffect(() => {\r\n\t\t// default to 200ms if not specified\r\n\t\tconst debounceMs = config.autocompleteDebounce || 200;\r\n\r\n\t\tconst cts = axios.CancelToken.source();\r\n\t\tconst timeout = setTimeout(() => doAutocomplete(query, cts.token), debounceMs);\r\n\r\n\t\treturn () => {\r\n\t\t\tcts.cancel();\r\n\t\t\tclearTimeout(timeout);\r\n\t\t};\r\n\t}, [query, config.autocompleteDebounce]);\r\n\r\n\t/**\r\n\t * Performs an autocomplete request to the Hawk API and populates the result set of this component.\r\n\t * @param input The user entered search string that results will be autocompleted for.\r\n\t */\r\n\tasync function doAutocomplete(input: string, cancellationToken?: CancelToken) {\r\n\t\tsetIsLoading(true);\r\n\r\n\t\tlet response: Response | null = null;\r\n\r\n\t\ttry {\r\n\t\t\tresponse = await client\r\n\t\t\t\t.autocomplete(\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\tClientGuid: config.clientGuid,\r\n\t\t\t\t\t\tKeyword: decodeURIComponent(input),\r\n\t\t\t\t\t\tIndexName: config.indexName,\r\n\t\t\t\t\t\tDisplayFullResponse: true,\r\n\t\t\t\t\t},\r\n\t\t\t\t\tcancellationToken\r\n\t\t\t\t)\r\n\t\t\t\t.then(o => {\r\n\t\t\t\t\t// ensure, returned object will return response\r\n\t\t\t\t\t// since by default, axios uses JSON.parse to parse an object,\r\n\t\t\t\t\t// it doesn't recognize it as Response type - this line is to prevent it\r\n\t\t\t\t\treturn Object.assign(new Response(o));\r\n\t\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tif (axios.isCancel(error)) {\r\n\t\t\t\t// if the request was cancelled, it's because this component was updated\r\n\t\t\t\treturn;\r\n\t\t\t}\r\n\r\n\t\t\tconsole.error('Autocomplete request error:', error);\r\n\t\t}\r\n\r\n\t\tsetIsLoading(false);\r\n\r\n\t\tif (response) {\r\n\t\t\tsetResults(response);\r\n\t\t}\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className=\"autosuggest-menu\">\r\n\t\t\t<SearchSuggestionsList\r\n\t\t\t\tonViewMatches={onViewMatches}\r\n\t\t\t\tdownshift={downshift}\r\n\t\t\t\tisLoading={isLoading}\r\n\t\t\t\tsearchResults={results}\r\n\t\t\t\tSuggestionList={SuggestionList}\r\n\t\t\t/>\r\n\t\t</div>\r\n\t);\r\n}\r\n\r\nexport default SearchSuggestions;\r\n","import React from 'react';\r\nimport { DownshiftState, StateChangeOptions, ControllerStateAndHelpers } from 'downshift';\r\n\r\nimport SearchSuggestions from 'components/ui/SearchBox/SearchSuggestions';\r\nimport { Suggestion, SuggestionStrategyMatch } from 'models/Autocomplete/Suggestion';\r\nimport { getAutocompleteStrategies } from '../Facets/Overrides';\r\nimport { useHawkConfig } from 'components/ConfigProvider';\r\nimport { Product } from 'models/Autocomplete';\r\nimport { useHawkSearch } from 'components/StoreProvider';\r\nimport { useTranslation } from 'react-i18next';\r\nimport { CustomSuggestionListProps } from 'models/Autocomplete/CustomSuggestionList';\r\n\r\nimport Downshift from 'downshift';\r\n\r\nexport interface SearchBoxBaseProps {\r\n\tinitialValue?: string;\r\n\tonSubmit: (event: React.KeyboardEvent<HTMLInputElement>, downshift: ControllerStateAndHelpers<Suggestion>) => void;\r\n\tonViewMatches: (downshift: ControllerStateAndHelpers<Suggestion>) => void;\r\n\tSuggestionList?: React.ComponentType<CustomSuggestionListProps>;\r\n}\r\n\r\nfunction SearchBoxBase({ initialValue, onSubmit, onViewMatches, SuggestionList }: SearchBoxBaseProps) {\r\n\tconst { config } = useHawkConfig();\r\n\tconst strategies = getAutocompleteStrategies(config.autocompleteStrategies || []);\r\n\tconst { t, i18n } = useTranslation();\r\n\tconst { store } = useHawkSearch();\r\n\r\n\t/** Called when the internal state of downshift changes - we're handling a couple custom behaviors here */\r\n\tfunction handleStateChange(\r\n\t\tstate: DownshiftState<Suggestion>,\r\n\t\tchanges: StateChangeOptions<Suggestion>\r\n\t): Partial<StateChangeOptions<Suggestion>> {\r\n\t\tif (\r\n\t\t\t// NOTE: these strings are hardcoded to support code splitting downshift.\r\n\t\t\t// using the constants from the package will prevent code splitting from operating correctly\r\n\t\t\tchanges.type === '__autocomplete_mouseup__' ||\r\n\t\t\tchanges.type === '__autocomplete_keydown_enter__' ||\r\n\t\t\tchanges.type === '__autocomplete_click_item__'\r\n\t\t) {\r\n\t\t\t// when:\r\n\t\t\t//\r\n\t\t\t//  1. the mouse the clicked outside of downshift\r\n\t\t\t//  2. enter is pressed on the keyboard\r\n\t\t\t//  3. an item is selected from the dropdown\r\n\t\t\t//\r\n\t\t\t// then we want to retain the input value that was originally typed in. by default downshift\r\n\t\t\t// will clear the input value, so we're overriding this behavior here.\r\n\t\t\treturn { ...changes, inputValue: state.inputValue };\r\n\t\t}\r\n\r\n\t\treturn changes;\r\n\t}\r\n\r\n\t/** Called when an item has been selected from the autocomplete results. */\r\n\tfunction handleItemChange(item: Suggestion, downshift: ControllerStateAndHelpers<Suggestion>) {\r\n\t\tif (!item) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\tconst matchedStrategy = strategies.find(strategy => strategy.SuggestionType === item.SuggestionType);\r\n\t\tif (!matchedStrategy) {\r\n\t\t\treturn;\r\n\t\t}\r\n\r\n\t\t(matchedStrategy as SuggestionStrategyMatch).SuggestionStrategy.handleItemChange(item, downshift);\r\n\t}\r\n\r\n\tfunction handleToString(item: Suggestion): string {\r\n\t\tif (!item) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\tconst matchedStrategy = strategies.find(strategy => strategy.SuggestionType === item.SuggestionType);\r\n\t\tif (!matchedStrategy) {\r\n\t\t\treturn '';\r\n\t\t}\r\n\t\treturn (matchedStrategy as SuggestionStrategyMatch).SuggestionStrategy.toString(item);\r\n\t}\r\n\r\n\treturn (\r\n\t\t<React.Suspense fallback={<div>{t('Loading')}...</div>}>\r\n\t\t\t<Downshift\r\n\t\t\t\tstateReducer={handleStateChange}\r\n\t\t\t\titemToString={(item: Suggestion) => handleToString(item)}\r\n\t\t\t\tonChange={handleItemChange}\r\n\t\t\t\tinitialInputValue={decodeURIComponent(initialValue || '')}\r\n\t\t\t>\r\n\t\t\t\t{(options: ControllerStateAndHelpers<Suggestion>) => {\r\n\t\t\t\t\tconst { isOpen, inputValue, getInputProps, openMenu, closeMenu } = options;\r\n\r\n\t\t\t\t\tconst showSuggestions = isOpen && inputValue && inputValue.length > 0;\r\n\t\t\t\t\treturn (\r\n\t\t\t\t\t\t<div className=\"hawk__searchBox__searchInput\" aria-labelledby=\"autocomplete-search-box\">\r\n\t\t\t\t\t\t\t<div id=\"autocomplete-search-box\" className=\"hidden-label\">\r\n\t\t\t\t\t\t\t\tAutocomplete search box\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t<input\r\n\t\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\t\tstyle={{ width: '100%' }}\r\n\t\t\t\t\t\t\t\t{...getInputProps({\r\n\t\t\t\t\t\t\t\t\tonKeyDown: event => {\r\n\t\t\t\t\t\t\t\t\t\tif (onSubmit) {\r\n\t\t\t\t\t\t\t\t\t\t\tonSubmit(event, options);\r\n\t\t\t\t\t\t\t\t\t\t\tcloseMenu();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t\t// when the input is focused again, reopen the downshift menu\r\n\t\t\t\t\t\t\t\t\tonFocus: () => {\r\n\t\t\t\t\t\t\t\t\t\tif (inputValue && inputValue.length > 0) {\r\n\t\t\t\t\t\t\t\t\t\t\topenMenu();\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t},\r\n\r\n\t\t\t\t\t\t\t\t\tplaceholder: t('Enter a search term'),\r\n\t\t\t\t\t\t\t\t\t'aria-labelledby': 'autocomplete-search-box',\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t{showSuggestions ? (\r\n\t\t\t\t\t\t\t\t<SearchSuggestions\r\n\t\t\t\t\t\t\t\t\tquery={inputValue || ''}\r\n\t\t\t\t\t\t\t\t\tdownshift={options}\r\n\t\t\t\t\t\t\t\t\tonViewMatches={onViewMatches}\r\n\t\t\t\t\t\t\t\t\tSuggestionList={SuggestionList}\r\n\t\t\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t\t) : null}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t);\r\n\t\t\t\t}}\r\n\t\t\t</Downshift>\r\n\t\t</React.Suspense>\r\n\t);\r\n}\r\n\r\nexport default SearchBoxBase;\r\n","import React, { useContext } from 'react';\r\n\r\nimport { HawkSearchConfig } from 'types/HawkSearchConfig';\r\n\r\nconst ConfigContext = React.createContext({} as ConfigContextValue);\r\n\r\nexport interface ConfigContextValue {\r\n\t/** Global configuration. */\r\n\tconfig: HawkSearchConfig;\r\n}\r\n\r\nexport interface ConfigProviderProps {\r\n\tconfig: HawkSearchConfig;\r\n\tchildren: React.ReactNode;\r\n}\r\n\r\n// declare webpack's constant to appease typescript\r\ndeclare var __webpack_public_path__: string;\r\n\r\nfunction ConfigProvider({ config, children }: ConfigProviderProps) {\r\n\tif (config.assetPath) {\r\n\t\tlet path = config.assetPath;\r\n\r\n\t\t// ensure the provided path both starts and ends with a slash\r\n\t\tif (!path.startsWith('/')) {\r\n\t\t\tpath = '/' + path;\r\n\t\t}\r\n\t\tif (!path.endsWith('/')) {\r\n\t\t\tpath = path + '/';\r\n\t\t}\r\n\r\n\t\t// allow consumers to tell webpack where to load code split/lazy loaded files from, as they may not be\r\n\t\t// hosting our JS from /assets/ (the default path)\r\n\t\t__webpack_public_path__ = path;\r\n\t}\r\n\r\n\treturn <ConfigContext.Provider value={{ config }}>{children}</ConfigContext.Provider>;\r\n}\r\n\r\nexport function useHawkConfig() {\r\n\tconst context = useContext(ConfigContext);\r\n\r\n\tif (!context.config) {\r\n\t\tthrow new Error(\r\n\t\t\t'No HawkSearchConfig is available, did you forget to wrap your components in a ConfigProvider component?'\r\n\t\t);\r\n\t}\r\n\r\n\treturn context;\r\n}\r\n\r\nexport default ConfigProvider;\r\n"],"sourceRoot":""}